"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const express = require("express");
const router = express.Router();
exports.router = router;
const checkToken = require('../../../../app/middleware/checkToken');
const checkApiToken_1 = require("../../../../app/middleware/checkApiToken");
const fileHandler = require('../../../../app/middleware/fileHandler');
const fileStorage = fileHandler.any();
const adminUser_1 = require("../../../../app/middleware/adminUser");
const SuperUserActionChecker_1 = require("../../../../app/middleware/ActionChecker/SuperUserActionChecker");
const ProfileAdminController_1 = require("./ProfileAdminController");
const profileAdminController = new ProfileAdminController_1.ProfileAdminController();
const UniversityAdminController_1 = require("./UniversityAdminController");
const universityAdminController = new UniversityAdminController_1.UniversityAdminController();
const ProgramAdminController_1 = require("./ProgramAdminController");
const programAdminController = new ProgramAdminController_1.ProgramAdminController();
const ExamAdminController_1 = require("./ExamAdminController");
const examAdminController = new ExamAdminController_1.ExamAdminController();
const ExamController_1 = require("./ExamController");
const examController = new ExamController_1.ExamController();
const EntranceStatisticController_1 = require("./EntranceStatisticController");
const entranceStatisticController = new EntranceStatisticController_1.EntranceStatisticController();
const EntranceStatisticAdminController_1 = require("./EntranceStatisticAdminController");
const entranceStatisticAdminController = new EntranceStatisticAdminController_1.EntranceStatisticAdminController();
const ProgramController_1 = require("./ProgramController");
const programController = new ProgramController_1.ProgramController();
const ProgramPageController_1 = require("./ProgramPageController");
const programPageController = new ProgramPageController_1.ProgramPageController();
const UniversityPageController_1 = require("./UniversityPageController");
const universityPageController = new UniversityPageController_1.UniversityPageController();
const UniversityController_1 = require("./UniversityController");
const universityController = new UniversityController_1.UniversityController();
const AdminProgramCommentController_1 = require("../../comment/controllers/AdminProgramCommentController");
const adminProgramCommentController = new AdminProgramCommentController_1.AdminProgramCommentController();
const ProgramCommentController_1 = require("../../comment/controllers/ProgramCommentController");
const programCommentController = new ProgramCommentController_1.ProgramCommentController();
const ProgramMajorController_1 = require("./ProgramMajorController");
const programMajorController = new ProgramMajorController_1.ProgramMajorController();
const ProgramMajorAdminController_1 = require("./ProgramMajorAdminController");
const programMajorAdminController = new ProgramMajorAdminController_1.ProgramMajorAdminController();
const ProgramMetaAdminController_1 = require("./ProgramMetaAdminController");
const ProgramMetaController_1 = require("./ProgramMetaController");
const programMetaController = new ProgramMetaController_1.ProgramMetaController();
const ProgramSimilarController_1 = require("./ProgramSimilarController");
const programSimilarController = new ProgramSimilarController_1.ProgramSimilarController();
router.get('/university/:id', universityController.actionGet);
router.get('/universities', universityController.actionGetByIds);
router.get('/university/alias/:alias', universityPageController.actionFindByAlias);
router.get('/program/search', programController.actionSearch);
router.get('/program/search/count', programController.actionCountSearch);
router.get('/program/:id', programController.actionProgramPage);
router.get('/program/alias/:alias', programPageController.actionGet);
router.get('/program/:id/statistic/last', entranceStatisticController.actionGet);
router.get('/program/:id/exam', examController.actionList);
router.get('/program/search/suggest', programController.actionSuggestSearch);
router.get('/programmajor/search', programMajorController.actionSearch);
router.get('/programmajor/popular', programMajorController.actionGetPopular);
router.get('/program/:programId/pagemeta', programMetaController.actionGet);
router.get('/program/:programId/similar', programSimilarController.actionGet);
router.get('/programmajor/search', programMajorController.actionSearch);
router.get('/programmajor/:programMajorId/advicedcourses', programMajorController.actionGetAdvicedCourses);
const initCrudRouting = function (route, controller) {
    router.post(route, checkToken, fileStorage, adminUser_1.adminUser, SuperUserActionChecker_1.middleware, controller.actionCreate);
    router.get(route, controller.actionList);
    router.get(`${route}/:id`, controller.actionGet);
    router.put(`${route}/:id`, checkToken, fileStorage, adminUser_1.adminUser, SuperUserActionChecker_1.middleware, controller.actionUpdate);
    router.delete(`${route}/:id`, checkToken, adminUser_1.adminUser, SuperUserActionChecker_1.middleware, controller.actionDelete);
};
initCrudRouting('/admin/profile', profileAdminController);
initCrudRouting('/admin/university', universityAdminController);
initCrudRouting('/admin/university/:universityId/program', programAdminController);
initCrudRouting('/admin/program/:programId/exam', examAdminController);
initCrudRouting('/admin/program/:programId/statistic', entranceStatisticAdminController);
initCrudRouting('/admin/program/:programId/comment', adminProgramCommentController);
initCrudRouting('/admin/programmajor', programMajorAdminController);
const initSimpleCrudRouting = function (route, controller) {
    router.post(route, checkApiToken_1.middleware, controller.actionCreate);
    router.get(route, controller.actionList);
    router.get(`${route}/:id`, controller.actionGet);
    router.put(`${route}/:id`, checkApiToken_1.middleware, controller.actionUpdate);
    if (controller.actionDelete) {
        router.delete(route, checkApiToken_1.middleware, controller.actionDelete);
    }
};
initSimpleCrudRouting('/program/:programId/comment', programCommentController);
const programMetaAdminController = new ProgramMetaAdminController_1.ProgramMetaAdminController();
router.get('/admin/program/:programId/pagemeta/:id', programMetaAdminController.actionGet);
router.post('/admin/program/:programId/pagemeta', checkToken, adminUser_1.adminUser, SuperUserActionChecker_1.middleware, programMetaAdminController.actionCreate);
router.put('/admin/program/:programId/pagemeta/:id', checkToken, adminUser_1.adminUser, SuperUserActionChecker_1.middleware, programMetaAdminController.actionUpdate);
router.get('/admin/program/:programId/alias', programAdminController.actionGetAlias);
