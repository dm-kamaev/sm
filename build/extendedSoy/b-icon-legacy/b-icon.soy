{namespace gorod.bIcon.IconTemplate autoescape="strict"}
/**
* @param? params
*/
{template .render}

    {call .init_}
        {param params: $params /}
    {/call}
{/template}
/**
*/
{template .init_}
    {@param params: ?}

    <span
        class="
            b-icon
            {$params?.extraClasses ? ' ' + $params.extraClasses : ''}
            {$params?.fading ? ' b-icon_fading' : '' }
            {call .initDefaultClasses_ data="all" /}
            {call .initTypeClasses_ data="all" /}
            {call .initStateClasses_  data="all" /}
         "
        data-params='{call .generateJSON_  data="all" /}'
    >
    </span>
{/template}
/**
*/
{template .initDefaultClasses_}
    {@param? params: ?}

    {if not($params?.typePressed)} b-icon_default-pressed{/if}
    {if not($params?.typeHover)} b-icon_default-hover{/if}
    {if not($params?.typeActive)} b-icon_default-active{/if}
    {if not($params?.typeDummy)} b-icon_default-dummy{/if}
    {if not($params?.typeDisabled)} b-icon_default-disabled{/if}
{/template}
/**
*/
{template .initTypeClasses_}
    {@param? params: ?}

    {if $params?.state?.disabled and $params?.typeDisabled}
        {sp}b-icon_img_{$params.typeDisabled}
    {elseif $params?.state?.dummy and $params?.typeDummy}
        {sp}b-icon_img_{$params.typeDummy}
    {elseif $params?.state?.active and $params?.typeActive}
        {sp}b-icon_img_{$params.typeActive}
    {elseif $params?.state?.hover and $params?.typeHover}
        {sp}b-icon_img_{$params.typeHover}
    {elseif $params?.state?.pressed and $params?.typePressed}
        {sp}b-icon_img_{$params.typePressed}
    {else}
        {sp}b-icon_img_{$params?.type}
    {/if}
{/template}
/**
*/
{template .initStateClasses_}
    {@param params: ?}

    {if ($params?.state?.pressed)} b-icon_state_pressed{/if}
    {if ($params?.state?.hover)} b-icon_state_hover{/if}
    {if ($params?.state?.active)} b-icon_state_active{/if}
    {if ($params?.state?.dummy)} b-icon_state_dummy{/if}
    {if ($params?.state?.disabled)} b-icon_state_disabled{/if}
{/template}
/**
*/
{template .generateJSON_}
    {@param params: ?}

    {let $jsonParams : quoteKeysIfJs([
            'type': quoteKeysIfJs([
                'default': $params?.type ?: '',
                'pressed': $params?.typePressed ?: '',
                'hover': $params?.typeHover ?: '',
                'active': $params?.typeActive ?: '',
                'dummy':  $params?.typeDummy ?: '',
                'disabled':  $params?.typeDisabled ?: '',
             ]),
            'state': quoteKeysIfJs([
                'pressed': $params.state?.pressed ?: '',
                'hover': $params.state?.hover ?: '',
                'active': $params.state?.active ?: '',
                'dummy':  $params.state?.dummy ?: '',
                'disabled':  $params.state?.disabled ?: '',
            ])
        ])
    /}
    {call gorod.iUtils.stringify}
        {param json: $jsonParams /}
    {/call}
{/template}
