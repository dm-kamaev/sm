log_format logstash '$remote_addr - $remote_user [$time_local] '
   '"$request" $status $body_bytes_sent '
   '"$http_referer" "$http_user_agent" '
   '$request_time '
   '"$upstream_response_time" "$host"';

upstream node_app {
    server 127.0.0.1:3000;
    keepalive 8;
}

server {
    listen          80;
    server_name     ~^www\.(?<domain>.+)$;
    return 301      http://$domain$request_uri;
}

server {
	listen          80;
	server_name     schools.mel.fm;

	access_log      /var/log/nginx/schools.mel.fm.access.log logstash;
	error_log       /var/log/nginx/schools.mel.fm.error.log warn;

	charset utf-8;
	client_max_body_size 20M;
	client_body_buffer_size 20M;

	#new settings for speed improvements added by apyshonkin
	client_body_timeout 10;
	reset_timedout_connection on;
	send_timeout 2;
	sendfile on;
	tcp_nodelay on;
	tcp_nopush on;

	# pass the request to the node.js server with the correct headers
	# and much more can be added, see nginx config options
	location / {

		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header Host $http_host;
		proxy_set_header X-NginX-Proxy true;

		proxy_pass http://node_app/;
		proxy_redirect off;
	}

    location /coursesearch {

        proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header Host $http_host;
		proxy_set_header X-NginX-Proxy true;

		proxy_pass http://node_app/coursesearch;
		proxy_redirect off;

        auth_basic           "restricted";
        auth_basic_user_file /etc/nginx/.htpasswd;
    }

	# serving static by nginx to relieve backend's burden
	location ~ \.(eot|ttf|woff|woff2|js|css|png|ico|svg|jpg|gif|txt|html|swf|xml) {
			root /opt/school-market/current/public;
			access_log /var/log/nginx/schools.static.access.log;
	}
}
