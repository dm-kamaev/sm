{namespace sm.bSmBalloon.Template}

/**
 * @typedef {{
 *     title: {
 *         id: number,
 *         text: string,
 *         url: ?string
 *     },
 *     subtitle: string,
 *     items: Array<{
 *         id: number,
 *         content: string,
 *         url: ?string
 *     }>,
 *     description: string
 * }} sm.bSmBalloon.Template.Params.Data
 */

/**
 * Template for Ymaps ballon content template block
 * @param params {{
 *     data:  sm.bSmBalloon.Template.Params.Data
 * }}
 * @constructor
 * @extends cl.iControl.Template
 */
{template .balloon kind="html"}
    {call .init data="all" /}
{/template}


/**
 * @param params {{
 *     data:  sm.bSmBalloon.Template.Params.Data
 * }}
 * @override
 */
{template .body  kind="html"}
    <div class="{call .rootClass /}__wrap">
        {call .closer_ /}
        {call .header_ data="all" /}
        {call .content_ data="all" /}
    </div>
{/template}


/**
 * Close button template
 */
{template .closer_ kind="html"}
    {let $customClasses kind="html"}
        {call .rootClass /}__close
    {/let}

    <div class="{call .rootClass /}__close-wrap">
        {call .renderChild}
            {param params: [
                'type': 'icon',
                'renderParams': [
                    'data': [
                        'type': 'close-balloon'
                    ],
                    'config': [
                        'customClasses': [$customClasses]
                    ]
                ]
            ]/}
        {/call}
    </div>
{/template}


/**
 * Header template
 * @param params {{
 *     data: {
 *         id: number,
 *         title: {
 *             url: (string|undefined),
 *             name: (string|undefined)
 *         },
 *         subtitle: (string|undefined),
 *         items: Array<string>
 *     }
 * }}
 */
{template .header_ kind="html"}
    <div class="{call .rootClass /}__section
        {sp}{call .rootClass /}__section_header">
        <div class="{call .rootClass /}__header">
            {if $params.data.title}
                {call .title_ data="all" /}
            {/if}

            {if $params.data.subtitle}
                {call .subtitle_ data="all" /}
            {/if}
        </div>
    </div>
{/template}


/**
 * Title template
 * @param params {{
 *     data: {
 *         title: {
 *             url: (string|undefined),
 *             text: (string|undefined)
 *         }
 *     }
 * }}
 */
{template .title_ kind="html"}
    <div class="{call .rootClass /}__title">
        {if $params.data.title.url}
            {let $customClasses kind="html"}
                {call .rootClass /}__title-link
            {/let}
            {call .renderChild}
                {param params: [
                    'type': 'smLink',
                    'renderParams': [
                        'data': [
                            'url': $params.data.title.url,
                            'content': $params.data.title.text
                        ],
                        'config': [
                            'size': 'l',
                            'customClasses': [$customClasses],
                            'theme': 'dark'
                        ]
                    ]
                ]/}
            {/call}
        {else}
            {$params.data.title.text}
        {/if}
    </div>
{/template}


/**
 * Subtitle template
 * @param params {{
 *     data: {
 *         subtitle: string
 *     }
 * }}
 */
{template .subtitle_ kind="html"}
    <div class="{call .rootClass /}__subtitle">
        {$params.data.subtitle}
    </div>
{/template}


/**
 * Content template
 * @param params {{
 *     data: {
 *         items: Array<{
 *             url: string,
 *             text: string
 *         }>
 *     }
 * }}
 */
{template .content_ kind="html"}
    <div class="{call .rootClass /}__section
        {sp}{call .rootClass /}__section_content">
        {if length($params.data.items) == 1}
            {call .item_ data="all" /}
        {else}
            {call .itemList_ data="all" /}
        {/if}

        {if $params.data.description}
            {call .description_ data="all" /}
        {/if}
    </div>
{/template}



/**
 * Item template for case, where ballon contain one link
 * @param params {{
 *     data: {
 *         items: Array<{
 *             url: string,
 *             content: string
 *         }>
 *     }
 * }}
 */
{template .item_ kind="html"}
    {let $customClasses kind="html"}
        {call .rootClass /}__item
    {/let}
    {call .renderChild}
        {param params: [
            'type': 'smLink',
            'renderParams': [
                'data': $params.data.items[0],
                'config': [
                    'size': 'l',
                    'customClasses': [$customClasses]
                ]
            ]
        ] /}
    {/call}
{/template}


/**
 * Item list template, for case, where ballon contain several link
 * @param params {{
 *     data: {
 *         items: Array<{
 *             url: string,
 *             content: string
 *         }>
 *     }
 * }}
 */
{template .itemList_ kind="html"}
    {let $customClasses kind="html"}
        {call .rootClass /}__item-list
    {/let}

    {call .renderChild}
        {param params: [
            'type': 'smListPaged',
            'renderParams': [
                'data': [
                    'items': $params.data.items,
                    'countItemsPerPage': 5,
                    'itemConfig': [
                        'theme': 'block',
                        'size': 'l'
                    ],
                    'listConfig': [
                        'theme': 'light'
                    ]
                ],
                'config': [
                    'itemType': 'smLink',
                    'customClasses': [$customClasses]
                ]
            ]
        ] /}
    {/call}
{/template}


/**
 * Description template
 * @param params {{
 *     data: {
 *         description: string
 *     }
 * }}
 * @private
 */
{template .description_ kind="html"}
    <div class="{call .rootClass /}__description">
        {$params.data.description}
    </div>
{/template}


/**
 * Attributes
 * @param params {{
 *     data: {
 *         id: number
 *     }
 * }}
 * @override
 */
{template .attributes kind="attributes"}
    {let $dataParams: quoteKeysIfJs([
        'id': $params.data.id
    ]) /}

    data-params="{call cl.iUtils.Utils.stringify}
        {param json: $dataParams /}
    {/call}"
{/template}


/**
 * @param params {{
 *     data: {
 *         items: Array<{
 *             url: string,
 *             content: string
 *         }>
 *     }
 * }}
 */
{template .additionalClasses kind="html"}
    {if length($params.data.items) == 1}
        {call .rootClass /}_item
    {else}
        {call .rootClass /}_item-list
    {/if}
{/template}


/**
 * @override
 */
{template .rootClass}
    b-sm-balloon
{/template}
