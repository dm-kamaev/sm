{namespace sm.bSmBalloon.Template}

/**
 * @typedef {{
 *     id: (number|undefined),
 *     category: (string|undefined),
 *     header: {
 *         title: (string|undefined),
 *         description: (string|undefined)
 *     },
 *     description: {
 *         text: (string|undefined),
 *         link: {
 *             text: (string|undefined),
 *             url: (string|undefined)
 *         }
 *     },
 *     content:{
 *         title: (string|undefined),
 *         items: Array<{
 *             id: number,
 *             content: string,
 *             url: string
 *         }>
 *     }
 *     footer: {
 *         title: (string|undefined)
 *     }
 * }} sm.bSmBalloon.Template.Params.Data
 */

/**
 * Template for Ymaps ballon content template block
 * @param params {{
 *     data: sm.bSmBalloon.Template.Params.Data
 * }}
 * @constructor
 * @extends cl.iControl.Template
 */
{template .balloon kind="html"}
    {call .init data="all" /}
{/template}


/**
 * @param params {{
 *     data: sm.bSmBalloon.Template.Params.Data
 * }}
 * @override
 */
{template .body  kind="html"}
    <div class="{call .rootClass /}__wrap">
        {call .closer_ /}
        {if $params.data.header}
            {call .header_ data="all" /}
        {/if}
        {if $params.data.description}
            {call .description_ data="all" /}
        {/if}
        {if $params.data.content}
            {call .content_ data="all" /}
        {/if}
        {if $params.data.footer}
            {call .footer_ data="all" /}
        {/if}
    </div>
{/template}


/**
 * Close button template
 */
{template .closer_ kind="html"}
    {let $customClasses kind="html"}
        {call .rootClass /}__close
    {/let}

    <div class="{call .rootClass /}__close-wrap">
        {call .renderChild}
            {param params: [
                'type': 'icon',
                'renderParams': [
                    'data': [
                        'type': 'close-balloon'
                    ],
                    'config': [
                        'customClasses': [$customClasses]
                    ]
                ]
            ]/}
        {/call}
    </div>
{/template}


/**
 * Header template
 * @param params {{
 *     data: {
 *         header: {
 *             title: string,
 *             subtitle: string
 *         }
 *     }
 * }}
 */
{template .header_ kind="html"}
    <div class="{call .rootClass /}__section
        {sp}{call .rootClass /}__section_header">
        {if isNonnull($params.data.header.title)}
            {call .title_ data="all" /}
        {/if}

        {if isNonnull($params.data.header.description)}
            {call .subtitle_ data="all" /}
        {/if}
    </div>
{/template}


/**
 * Title template
 * @param params {{
 *     data: {
 *         header: {
 *             title: string,
 *             subtitle: string
 *         }
 *     }
 * }}
 */
{template .title_ kind="html"}
    <div class="{call .rootClass /}__header-title">
        {$params.data.header.title}
    </div>
{/template}


/**
 * Subtitle template
 * @param params {{
 *     data: {
 *         header: {
 *             title: string,
 *             subtitle: string
 *         }
 *     }
 * }}
 */
{template .subtitle_ kind="html"}
    <div class="{call .rootClass /}__header-subtitle">
        {$params.data.header.description}
    </div>
{/template}


/**
 * Content template
 * @param params {{
 *     data: {
 *         content:{
 *             title: string
 *         }
 *     }
 * }}
 */
{template .content_ kind="html"}
    {if isNonnull($params.data.content.title) or ($params.data.content.items.length > 0) }
        <div class="{call .rootClass /}__section
            {sp}{call .rootClass /}__section_content">

            {if isNonnull($params.data.content.title)}
                <div class="{call .rootClass /}__content-title">
                    {$params.data.content.title}
                </div>
            {/if}

            {if $params.data.content.items.length > 0}
                {call .itemList_ data="all" /}
            {/if}

        </div>
    {/if}
{/template}


/**
 * Item list template, for case, where ballon contain several link
 * @param params {{
 *     data: {
 *         content:{
 *             items: Array<{
 *                 id: number,
 *                 content: string,
 *                 url: ?string
 *             }>
 *         }
 *     }
 * }}
 */
{template .itemList_ kind="html"}
    {let $customClasses kind="html"}
        {call .rootClass /}__item-list
    {/let}
    {call .renderChild}
        {param params: [
            'type': 'smListPaged',
            'renderParams': [
                'data': [
                    'items': $params.data.content.items,
                    'countItemsPerPage': $params.data.content.items.length,
                    'itemConfig': [
                        'theme': 'minimal'
                    ],
                    'listConfig': [
                        'theme': 'minimal'
                    ]
                ],
                'config': [
                    'itemType': 'smItem',
                    'customClasses': [$customClasses]
                ]
            ]
        ] /}
    {/call}
{/template}


/**
 * Description template
 * @param params {{
 *     data: {
 *         description: {
 *             text: string,
 *             link: {
 *                 text: string,
 *                 url: string
 *             }
 *         }
 *     }
 * }}
 * @private
 */
{template .description_ kind="html"}
    <div class="{call .rootClass /}__section
        {sp}{call .rootClass /}__section_description">
        {if isNonnull($params.data.description.text)}
            <div class="{call .rootClass /}__description-text">
                {$params.data.description.text}
            </div>
        {/if}
        {if $params.data.description.link}
            {let $customClasses kind="html"}
                {call .rootClass /}__description-link
            {/let}
            {call .renderChild}
                {param params: [
                    'type': 'smLink',
                    'renderParams': [
                        'data': [
                            'url': $params.data.description.link.url,
                            'content': $params.data.description.link.text
                        ],
                        'config': [
                            'size': 'l',
                            'customClasses': [$customClasses],
                            'theme': 'default'
                        ]
                    ]
                ]/}
            {/call}
        {/if}
    </div>
{/template}


/**
 * footer template
 * @param params {{
 *     data: {
 *         footer: {
 *             title: string
 *         }
 *     }
 * }}
 */
{template .footer_}
    {if isNonnull($params.data.footer.title)}
        <div class="{call .rootClass /}__section
        {sp}{call .rootClass /}__section_footer">
            <div class="{call .rootClass /}__footer-text">
                {$params.data.footer.title}
            </div>
        </div>
    {/if}
{/template}


/**
 * Attributes
 * @param params {{
 *     data: {
 *         id: number
 *     }
 * }}
 * @override
 */
{template .attributes kind="attributes"}
    {let $dataParams: quoteKeysIfJs([
        'id': $params.data.id
    ]) /}

    data-params="{call cl.iUtils.Utils.stringify}
        {param json: $dataParams /}
    {/call}"
{/template}


/**
 * @override
 */
{template .additionalClasses kind="html"}
    {call .rootClass /}_item-list
{/template}


/**
 * @override
 */
{template .rootClass}
    b-sm-balloon
{/template}
