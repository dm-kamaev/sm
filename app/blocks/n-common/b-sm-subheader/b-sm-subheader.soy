{namespace sm.bSmSubheader.Template}


/**
 * @typedef {{
 *     logo: {
 *         imgUrl: string,
 *         altText: ?string,
 *         linkUrl: ?string
 *     },
 *     links: {
 *         nameL: string,
 *         nameM: string,
 *         nameS: (string|undefined),
 *         url: string
 *     },
 *     search: {
 *         placeholder: (string|undefined),
 *         searchRedirect: boolean
 *     },
 *     user: ?{
 *         firstName: ?string,
 *         lastName: ?string
 *     },
 *     favorites: sm.bSmFavorite.Template.Params.Data
 * }} sm.bSmSubheader.Template.Params.Data
 */


 /**
 * @typedef {{
 *     entityType: string,
 *     bottomLine: ?boolean,
 *     theme: (string|undefined),
 *     stylizationModifier: string
 * }} sm.bSmSubheader.Template.Params.Config
 */


 /**
 * Constructor
 * @param params {{
 *     data: sm.bSmSubheader.Template.Params.Data,
 *     config: sm.bSmSubheader.Template.Params.Config
 * }}
 * @extends cl.iControl.Template
 * @constructor
 */
{template .subheader}
    {call .init data="all"/}
{/template}


/**
 * Body
 * @param params {{
 *     data: sm.bSmSubheader.Template.Params.Data
 * }}
 * @override
 */
{template .body}
    <div class="{call .rootClass/}__body">
        {call .sectionLogo_ data="all" /}
        {call .sectionLinks_ data="all" /}
        {call .sectionSearch_ data="all" /}
    </div>
{/template}


/**
 * Section Logo
 * @param params {{
 *     data: {
 *         logo: {
 *             imgUrl: string,
 *             altText: ?string,
 *             linkUrl: ?string
 *         }
 *     }
 * }}
 */
{template .sectionLogo_}
    <div class="{call .rootClass/}__section
                {sp}{call .rootClass/}__section_logo
                {sp}i-animate">
        {call .logo_ data="all" /}
    </div>
{/template}


/**
 * Section links
 * @param params {{
 *     data: {
 *         links: {
 *             nameL: string,
 *             nameM: string,
 *             nameS: (string|undefined),
 *             url: string
 *         },
 *         user: ?{
 *             firstName: ?string,
 *             lastName: ?string
 *         },
 *         favorites: sm.bSmFavorite.Template.Params.Data
 *     }
 * }}
 */
{template .sectionLinks_}
    <div class="{call .rootClass/}__section
                {sp}{call .rootClass/}__section_links
                {sp}i-animate">
        {call .linksSearch_ data="all" /}
        {call .userControls_ data="all" /}
    </div>
{/template}


/**
 * Section search
 * @param params {{
 *     data: {
 *         search: {
 *             placeholder: ?string,
 *             searchRedirect: ?boolean
 *         }
 *     }
 * }}
 */
{template .sectionSearch_}
    <div class="{call .rootClass/}__section
            {sp}{call .rootClass/}__section_search">

        {call .searchL_ data="all" /}
        {call .searchS_ data="all" /}
    </div>
{/template}


/**
 * Search links
 * @param params {{
 *     data: {
 *         links: {
 *             nameL: string,
 *             nameM: string,
 *             nameS: (string|undefined),
 *             url: string
 *         }
 *     }
 * }}
 */
{template .linksSearch_}
    <div class="{call .rootClass/}__search-links">
        {call .linkSearch_}
            {param params: [
                'data': [
                    'name': $params.data.links.nameL,
                    'url': $params.data.links.url
                ],
                'config': [
                    'size': 'l'
                ]
            ]/}
        {/call}

        {call .linkSearch_}
            {param params: [
                'data': [
                    'name': $params.data.links.nameM,
                    'url': $params.data.links.url
                ],
                'config': [
                    'size': 'm'
                ]
            ]/}
        {/call}

        {call .linkSearch_}
            {param params: [
                'data': [
                    'name': $params.data.links.nameS ?: $params.data.links.nameM,
                    'url': $params.data.links.url
                ],
                'config': [
                    'size': 's'
                ]
            ]/}
        {/call}
    </div>
{/template}


/**
 * Links for authorization and favorite
 * @param params {{
 *     data: {
 *         user: ?{
 *             firstName: ?string,
 *             lastName: ?string
 *         },
 *         favorites: sm.bSmFavorite.Template.Params.Data
 *     }
 * }}
 */
{template .userControls_}
    <div class="{call .rootClass/}__user-controls">
        {call .linkAuthorization_ data="all" /}
        {call .favorite_ data="all" /}
    </div>
{/template}


/**
 * link Authorization template
 * @param params {{
 *     data: {
 *        user: ?{
 *            firstName: ?string,
 *            lastName: ?string
 *        }
 *     }
 * }}
 */
{template .linkAuthorization_}
    <div class="{call .rootClass/}__user-control
                {sp}{call .rootClass/}__user-control_authorization">
        <div class="{call .rootClass/}__authorization-content">
            {call .renderChild}
                {param params: [
                    'type': 'authorization-link',
                    'renderParams': [
                        'data': [
                            'user': $params?.data?.user
                        ]
                    ]
                ]/}
            {/call}
        </div>
    </div>
{/template}


/**
 * template favorite
 * @param params {{
 *     data: {
 *          favorites: sm.bSmFavorite.Template.Params.Data
 *     },
 *     config: {
 *         stylizationModifier: string
 *     }
 * }}
 */
{template .favorite_}
    <div class="{call .rootClass/}__user-control
                {sp}{call .rootClass/}__user-control_favorite">
        <div class="{call .rootClass/}__favorite-content">
            {call .renderChild}
                {param params: [
                    'type': 'smFavorite',
                    'renderParams': [
                        'data': $params.data?.favorites,
                        'config': [
                            'isUserAuthorized': $params.data.user ? true : false
                        ]
                    ]
                ]/}
            {/call}
        </div>
    </div>
{/template}


/**
 * Logo
 * @param params {{
 *     data: {
 *         logo: {
 *             imgUrl: string,
 *             altText: ?string,
 *             linkUrl: ?string
 *         }
 *     }
 * }}
 */
{template .logo_}
    {let $href kind="attributes"}
        {if $params.data.logo?.linkUrl}
            href="{$params.data.logo?.linkUrl}"
        {/if}
    {/let}

    <div class="{call .rootClass/}__logo i-animate">
        <a class="{call .rootClass/}__link" {$href}>
            {call .logoImg_ data="all"/}
        </a>
    </div>
{/template}


/**
 * Logo img
 * @param params {{
 *     data: {
 *         logo: {
 *             imgUrl: string,
 *             altText: ?string
 *         }
 *     }
 * }}
 */
{template .logoImg_}
    {let $altText kind="attributes"}
        {if $params.data.logo?.altText}
            {sp}alt="{$params.data.logo.altText}"
        {/if}
    {/let}

    <img class="{call .rootClass/}__logo-img"
        src="{$params.data.logo.imgUrl}" {$altText}>
{/template}


/**
 * Search field for display size l
 * @param params {{
 *     data: {
 *         search: {
 *             placeholder: ?string,
 *             searchRedirect: ?boolean
 *         }
 *     },
 *     config: {
 *         entityType: string
 *     }
 * }}
 */
{template .searchL_}
    {let $customClasses kind="html"}
        {call .rootClass/}__search{sp}
        {call .rootClass/}__search_visible_l
    {/let}

    {call sm.bSearch.Template.base}
        {param params: [
            'placeholder': $params.data?.search?.placeholder,
            'theme': 'min',
            'customClasses': $customClasses,
            'redirect': $params.data?.search?.searchRedirect,
            'inputSize': 'min',
            'config': [
                'entityType': $params.config.entityType,
                'showSearchIcon': true,
                'height': 'l'
            ]
        ]/}
    {/call}
{/template}


/**
 * Search field for display size s
 * @param params {{
 *     data: {
 *         search: {
 *             placeholder: ?string,
 *             searchRedirect: ?boolean
 *         }
 *     },
 *     config: {
 *         entityType: string
 *     }
 * }}
 */
{template .searchS_}
    {let $customClasses kind="html"}
        {call .rootClass/}__search{sp}
        {call .rootClass/}__search_visible_s
    {/let}

    {call sm.bSearch.Template.base}
        {param params: [
            'placeholder': $params.data?.search?.placeholder,
            'theme': 'foldable',
            'customClasses': $customClasses,
            'redirect': $params.data?.search?.searchRedirect,
            'inputSize': 'min',
            'config': [
                'entityType': $params.config.entityType,
                'height': 'xxl'
            ]
        ]/}
    {/call}
{/template}


/**
 * Search links for display certain size
 * @param params {{
 *     data: {
 *         url: (string|undefined),
 *         name: (string|undefined)
 *     },
 *     config: {
 *         size: string
 *     }
 * }}
 */
{template .linkSearch_}
    {let $content kind="html"}
        {call .iconLinkSearch_ /}
        {$params.data?.name ?: ''}
    {/let}

    <div class="{call .rootClass/}__search-link{sp}
                {call .rootClass/}__search-link_visible_{$params.config.size}">
        {call .renderChild}
            {param params: [
                'type': 'smLink',
                'renderParams': [
                    'data': [
                        'url': $params.data?.url,
                        'content': $content
                    ],
                    'config': [
                        'size': 'l'
                    ]
                ]
            ]/}
        {/call}
    </div>
{/template}


/**
 * Icon for search link
 */
{template .iconLinkSearch_}
    <div class="{call .rootClass/}__icon {call .rootClass/}__icon_search-link">
        {call .renderChild}
            {param params: [
                'type': 'icon',
                'renderParams': [
                    'data': [
                        'type': 'list'
                    ],
                    'config': [
                        'customClasses': ''
                    ]
                ]
            ]/}
        {/call}
    </div>
{/template}


/**
 * Root css class
 * @override
 */
{template .rootClass}
    b-sm-subheader
{/template}


/**
 * Css classes
 * @param params {{
 *     config: {
 *         bottomLine: ?boolean,
 *         entityType: string
 *     }
 * }}
 * @override
 */
{template .additionalClasses}
    {call .rootClass/}_entity-type_{$params.config?.entityType}

    {if $params?.config?.bottomLine}
        {sp}{call .rootClass/}_line_bottom
    {/if}
{/template}
