{namespace sm.bBadge.Template}

/**
 * Badge template
 * @param params {{
 *     data: ?list<[
 *         id: number,
 *         name: string
 *     ]>,
 *     display: ?string
 *     config: {
 *         isNotClickable: boolean
 *     }
 * }}
 */
{template .base}
    {let $isRating: not $params?.display/}

    {let $class kind="html"}
        b-badge
        {if $isRating}
            {sp}b-badge_rating
        {/if}

        {if not $params?.config?.isNotClickable}
            {sp}b-badge_active
        {/if}

        {sp}b-badge_{$params?.display ?: 'test'}
    {/let}

    <div class="{$class}">
        {call .icon_ data="all"/}
        {call .text_ data="all" /}
        {if $isRating}
            {call .hint_ /}
        {/if}
    </div>
{/template}


/**
 * @param params {{
 *     data: ?list<[
 *         id: number,
 *         name: string
 *     ]>,
 *     display: ?string
 * }}
 */
{template .text_ private="true"}
    <div class="b-badge__text">
        {if length($params.data) > 0}
            {foreach $dataItem in $params.data}
                {if $params?.display == 'metro'}
                    {call .metroItem_}
                        {param params:[
                            'name': $dataItem.name,
                            'id': $dataItem.id,
                        ] /}
                    {/call}
                {else}
                    {call .ratingItem_}
                        {param params:[
                            'ratingName': $dataItem
                        ] /}
                    {/call}
                {/if}

                {if not isLast($dataItem)}
                    ,{sp}
                {/if}
            {/foreach}
        {else}
            {call .areaItem_}
                {param params:[
                    'name': $params.data.name,
                    'id': $params.data.id
                ] /}
            {/call}
        {/if}
    </div>
{/template}


/**
 * @param params {
 *     display: ?string
 * }
 */
{template .icon_ private="true"}
    <div class="b-badge__icon">
        {call sm.iNewFactory.FactoryStendhal.INSTANCE.soy}
            {param type: $params.display == 'metro' ? 'icon-svg' : 'icon' /}
            {param renderParams: [
                'data': [
                    'type': $params.display ?: 'test'
                ]
            ]/}
        {/call}
    </div>
{/template}


/**
 * Clickable metro template
 * @param params {{
 *     name: string,
 *     id: number
 * }}
 */
{template .metroItem_ private="true"}
    {let $data: [
        'metroId': $params.id
    ]/}
    <div class="b-badge__item"
         data-params="{call goog.json.serialize data="$data" /}">
        {$params.name}
    </div>
{/template}

/**
 * Clickable area template
 * @param params {{
 *     name: string,
 *     id: number
 * }}
 */
{template .areaItem_ private="true"}
    {let $data: [
        'areaId': $params.id
    ]/}
    <div class="b-badge__item"
         data-params="{call goog.json.serialize data="$data" /}">
        {$params.name}
    </div>
{/template}

/**
 * Ratings item template
 * @param params {{
 *     ratingName: ?string
 * }}
 */
{template .ratingItem_ private="true"}
    <div class="b-badge__item">
        {$params.ratingName}
    </div>
{/template}

/**
 * Hint template
 */
{template .hint_ private="true"}
    {let $hintData kind="html"}
        <div class="b-badge__hint-content">
            Рейтинг составлен Департаментом образования{sp}
            Москвы по итогам 2015—2016 учебного года
            <br>
            <div class="b-badge__hint-href">
                Подробнее
                <div class="b-badge__hint-href-icon">
                    {call sm.iNewFactory.FactoryStendhal.INSTANCE.soy}
                        {param type: 'icon' /}
                        {param renderParams: [
                            'data': [
                                'type': 'window-href'
                            ]
                        ]/}
                    {/call}
                </div>
            </div>
        </div>
    {/let}
    {call sm.iNewFactory.FactoryStendhal.INSTANCE.soy}
        {param type: 'hint' /}
        {param renderParams: [
            'data': $hintData,
            'config': [
                'align': 'left'
            ]
        ]/}
    {/call}
{/template}
