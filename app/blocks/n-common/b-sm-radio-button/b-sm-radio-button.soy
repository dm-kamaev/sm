/**
 * @fileOverview
 * params isUncheckable used to uncheck RadioButton when click
 * if the RadioButton was checked, when you click on it a second time
 * it will be unchecked
 *
 * params isNotDefaultStatus used to set classes with modifiers
 */

{namespace sm.bSmRadioButton.Template}


/**
 * @typedef {{
 *     id: (string|undefined),
 *     name: string,
 *     label: string,
 *     value: string,
 *     isChecked: (boolean|undefined)
 * }} sm.bSmRadioButton.Template.Params.Data
 */


/**
 * @typedef {{
 *     theme: ('label'|undefined),
 *     isNotDefaultStatus: (boolean|undefined),
 *     isUncheckable: (boolean|undefined),
 *     viewType: ('low'|'middle'|'high'|undefined),
 *     stylizationModifier: string
 * }} sm.bSmRadioButton.Template.Params.Config
 */


/**
 * Constructor
 * @param params {{
 *     data: sm.bSmRadioButton.Template.Params.Data,
 *     config: sm.bSmRadioButton.Template.Params.Config
 * }}
 * @extends cl.iControl.Template
 * @factory sm.iNewFactory.FactoryStendhal
 * @constructor
 */
{template .radioButton}
    {call .init data="all"/}
{/template}

/**
 * @override
 */
{template .NAME}
    smRadioButton
{/template}


/**
 * Body
 * @param params {{
 *     data: sm.bSmRadioButton.Template.Params.Data,
 *     config: sm.bSmRadioButton.Template.Params.Config
 * }}
 * @override
 */
{template .body}
    {call .input_ data="all"/}
    {call .label_ data="all"/}
{/template}


/**
 * Input template
 * @param params {{
 *     data: {
 *         id: (string|undefined),
 *         value: string,
 *         isChecked: (boolean|undefined)
 *     }
 * }}
 */
{template .input_}
    <input type="radio"
        class="{call .rootClass/}__input"
        id="{$params.data?.id ?: $params.data.value}"
        name="{$params.data.name}"
        value="{$params.data.value}"
        {$params.data?.isChecked ? 'checked' : ''}
    />
{/template}


/**
 * Label template
 * @param params {{
 *     data: {
 *         id: (string|undefined),
 *         label: string,
 *         value: string
 *     }
 * }}
 */
{template .label_}
    <label for="{$params.data?.id ?: $params.data.value}"
        class="{call .rootClass/}__label">
        {$params.data.label}
    </label>
{/template}


/**
 * Attributes
 * @param params {{
 *     data {
 *         id: (string|undefined),
 *         name: string,
 *         label: string,
 *         value: string,
 *         isChecked: (boolean|undefined)
 *     }
 * }}
 * @override
 */
{template .attributes kind="attributes"}
    data-params="
        {call cl.iUtils.Utils.stringify}
            {param json: [
                'id': $params.data?.id ?: $params.data.value,
                'name': $params.data.name,
                'label': $params.data.label,
                'value': $params.data.value
            ]/}
        {/call}"
{/template}


/**
 * Root css class
 * @override
 */
{template .rootClass}
    b-sm-radio-button
{/template}


/**
 * Css classes
 * @param params {{
 *     data: {
 *         isChecked: (boolean|undefined)
 *     },
 *     config: {
 *         isNotDefaultStatus: (boolean|undefined),
 *         isUncheckable: (boolean|undefined),
 *         viewType: ('low'|'middle'|'high'|undefined)
 *     }
 * }}
 * @override
 */
{template .additionalClasses}
    {if $params.config.isNotDefaultStatus}
        {call .rootClass/}_{$params.data.isChecked ? 'active': 'inactive'}
    {/if}

    {if $params.config.viewType}
        {sp}{call .rootClass/}_view-type_{$params.config.viewType}
    {/if}

    {if $params.config.isUncheckable}
        {sp}{call .rootClass/}_uncheckable
    {/if}
{/template}
