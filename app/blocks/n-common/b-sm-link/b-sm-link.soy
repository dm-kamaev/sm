/**
 * @fileoverview Link template for unification of links on project
 *
 * Set default theme if another theme not set
 */
{namespace sm.bSmLink.Template}


/**
 * @typedef {{
 *     id: ?number,
 *     url: ?string,
 *     content: ?string
 * }} sm.bSmLink.Template.Params.Data
 */


/**
 * @typedef {{
 *     target: ?string,
 *     disableHover: (boolean|undefined),
 *     size: ('s'|'m'|'l'|'xl'|'xxl'|'xxxl'),
 *     theme: ('attention'|'light'|'block'|'dark'|'default'|undefined),
 *     isSelected: boolean
 * }} sm.bSmLink.Template.Params.Config
 */


/**
 * Link template
 * @param params {{
 *     data: sm.bSmLink.Template.Params.Data,
 *     config: sm.bSmLink.Template.Params.Config,
 *     isSelected: boolean
 * }}
 * @extends cl.iControl.Template
 * @constructor
 */
{template .link kind="html"}
    {let $config: augmentMap(
        [
            'theme': 'default'
        ],
        $params.config
    ) /}

    {call .init}
        {param params: [
            'data': $params.data,
            'config': $config
        ] /}
    {/call}
{/template}

/**
 * Link
 * @param params {{
 *     data: sm.bSmLink.Template.Params.Data,
 *     config: sm.bSmLink.Template.Params.Config
 * }}
 * @override
 */
{template .body autoescape="strict" kind="html"}
    {$params?.data?.content}
{/template}


/**
 * Define tag
 * @param params {{
 *     data: {
 *         url: (string|undefined)
 *     }
 * }}
 * @override
 */
{template .tag kind="html"}
    {if $params.data.url}
        a
    {else}
        div
    {/if}
{/template}


/**
 * Attributes template
 * @param params {{
 *     data: {
 *         id: (number|undefined),
 *         url: (string|undefined)
 *     },
 *     config: {
 *         target: ('_blank'|undefined),
 *         disableHover: boolean
 *     }
 * }}
 * @override
 */
{template .attributes kind="attributes"}
    {if $params.data.url}
        href="{$params.data.url}"
    {/if}
    data-params="{call cl.iUtils.Utils.stringify}
        {param json: quoteKeysIfJs([
            'id': $params?.data.id,
            'disableHover': $params?.config.disableHover
        ]) /}
    {/call}"
    {if $params?.config.target}
        {sp}target="{$params.config.target}"
    {/if}
{/template}


/**
 * Addtitonal classes
 * @param params {{
 *     config: {
 *         size: ('s'|'m'|'l'|'xl'|'xxl'|'xxxl'),
 *         isSelected: boolean
 *     }
 * }}
 * @override
 */
{template .additionalClasses kind="html"}
    {if $params?.config.size}
        {sp}{call .rootClass /}_size_{$params?.config.size}
    {/if}
    {if $params?.config.isSelected}
        {sp}{call .rootClass /}_selected
    {/if}
{/template}


/**
 * Root css class
 * @override
 */
{template .rootClass}
    b-sm-link
{/template}
