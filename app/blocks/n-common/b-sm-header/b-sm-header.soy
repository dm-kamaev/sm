{namespace sm.bSmHeader.Template}

/**
 * @typedef {{
 *     menuItems: Array<{
 *         name: string,
 *         url: string,
 *         type: string,
 *         isSelected: boolean
 *     }>,
 *     contacts: sm.bSmContacts.Template.Params.Data,
 *     user?: {
 *         firstName: string,
 *         lastName: string,
 *         photoUrl?: string
 *     }
 * }} sm.bSmHeader.Template.Params.Data
 */


/**
 * @typedef {{
 *     entityType?: string,
 *     theme: string,
 *     customClasses: Array<string>
 * }} sm.bSmHeader.Template.Params.Config
 */


/**
 * @typedef {{
 *     data: sm.bSmHeader.Template.Params.Data,
 *     config: sm.bSmHeader.Template.Params.Config
 * }} sm.bSmHeader.Template.Params
 */


/**
 * Template for Header block
 * @param params {{
 *     data: sm.bSmHeader.Template.Params.Data
 * }}
 * @constructor
 * @factory sm.iCloblFactory.FactoryStendhal
 * @extends cl.iControl.Template
 */
{template .header}
    {call .init data="all" /}
{/template}

/**
 * @override
 */
{template .NAME}
    smHeader
{/template}


/**
 * @param params {{
 *     data: sm.bSmHeader.Template.Params.Data
 * }}
 * @override
 */
{template .body}
    <div class="{call .rootClass /}__body i-utils__clearfix">
        {call .headerMainMenu_ data="all" /}
    </div>
{/template}

/**
 * @param params {{
 *     data: sm.bSmHeader.Template.Params.Data
 * }}
 * @private
 */
{template .headerMainMenu_ kind="html"}
    <div class="{call .rootClass /}__main-menu">
        {call .sectionNavigation_ data="all" /}
        {call .sectionContacts_ data="all" /}
    </div>
{/template}


/**
 * Navigation section
 * @param params {{
 *     menuItems: Array<{
 *         name: string,
 *         url: string,
 *         type: string,
 *         isSelected: boolean
 *     }>
 * }}
 * @private
 */
{template .sectionNavigation_ kind="html"}
    <div class="{call .rootClass /}__section
        {sp}{call .rootClass /}__section_menu">
        {call .menu_ data="all" /}
    </div>
{/template}


/**
 * Contacts section
 * @param params {{
 *     data: {
 *         contacts: sm.bSmContacts.Template.Params.Data,
 *         user?: {
 *             firstName: string,
 *             lastName: string,
 *             photoUrl?: string
 *         }
 *     },
 *     config: {
 *         entityType: string
 *     }
 * }}
 * @private
 */
{template .sectionContacts_ kind="html"}
    <div class="{call .rootClass /}__section
        {sp}{call .rootClass /}__section_contacts">
        {call .contacts_ data="all" /}
        {call .authorization_ data="all" /}
    </div>
{/template}


/**
 * Menu template
 * @param params {{
 *     data: {
 *         menuItems: Array<{
 *             name: string,
 *             url: string,
 *             type: string,
 *             isSelected: boolean
 *         }>
 *     }
 * }}
 * @private
 */
{template .menu_ kind="html"}
    <ul class="{call .rootClass /}__navigation-menu">
        {foreach $item in $params.data.menuItems}
            {call .menuItem_}
                {param params: [
                    'data': $item
                ] /}
            {/call}
        {/foreach}
    </ul>
{/template}


/**
 * Menu item template
 * @param params {{
 *     name: string,
 *     url: string,
 *     type: string,
 *     isSelected: boolean
 * }}
 * @private
 */
{template .menuItem_ kind="html"}
    {let $classes kind="html"}
        {call .rootClass /}__menu-item
        {if $params.data.type}
            {sp}{call .rootClass /}__menu-item_{$params.data.type}
        {/if}
        {if $params.data.isSelected}
            {sp}{call .rootClass /}__menu-item_active-{$params.data.type}
        {/if}
    {/let}

    {let $customClasses kind="html"}
        {call .rootClass /}__menu-link
    {/let}

    <li class="{$classes}">
        {call .renderChild}
            {param params: [
                'type': 'smLink',
                'renderParams': [
                    'data': [
                        'url': $params.data.url,
                        'content': $params.data.name
                    ],
                    'config': [
                        'size': 'xxxl',
                        'theme': 'dark',
                        'customClasses': [$customClasses],
                        'target': $params.data.target or '',
                        'disableHover': false
                    ]
                ]
            ]/}
        {/call}
    </li>
{/template}


/**
 * Contacts template
 * @param params {{
 *     data: {
 *         contacts: sm.bSmContacts.Template.Params.Data
 *     }
 * }}
 * @private
 */
{template .contacts_ kind="html"}
    {if $params.data.contacts}
        <div class="{call .rootClass /}__contacts">
            {call .renderChild}
                {param params: [
                    'type': 'smContacts',
                    'renderParams': [
                        'data': $params.data.contacts
                    ]
                ] /}
            {/call}
        </div>
    {/if}
{/template}


/**
 * Contacts template
 * @param params {{
 *     data: {
 *         user?: {
 *             firstName: string,
 *             lastName: string,
 *             photoUrl?: string
 *         }
 *     },
 *     config: {
 *         entityType: string
 *     }
 * }}
 * @private
 */
{template .authorization_ kind="html"}
    <div class="{call .rootClass /}__authorization">
        {call .renderChild}
            {param params: [
                'type': 'authorization-link',
                'renderParams': [
                    'data': [
                        'user': $params.data.user
                    ],
                    'config': [
                        'entityType': $params.config.entityType
                    ]
                ]
            ] /}
        {/call}
    </div>
{/template}


/**
 * @override
 */
{template .rootClass}
    b-sm-header
{/template}
