{namespace sm.bAuthorizationLink.Template}


/**
 * Authorization link parameters
 * @typedef {{
 *     user: ?{
 *         firstName: ?string,
 *         lastName: ?string
 *     }
 * }} sm.bAuthorizationLink.Params.Data
 */


 /**
 * @typedef {{
 *     hintOffset: string
 * }} sm.bAuthorizationLink.Params.Config
 */


/**
 * Constructor
 * @param params {{
 *     data: sm.bAuthorizationLink.Params.Data,
 *     config: sm.bAuthorizationLink.Params.Config
 * }}
 * @extends cl.iControl.Template
 * @factory sm.iNewFactory.FactoryStendhal
 * @constructor
 */
{template .authorizationLink}
    {call .init data="all"/}
{/template}

/**
 * @override
 */
{template .NAME}
    authorization-link
{/template}


/**
 * Body
 * @param params {{
 *     data: sm.bAuthorizationLink.Params.Data,
 *     config: sm.bAuthorizationLink.Params.Config
 * }}
 * @override
 */
{template .body}
    {call .icon_/}
    {call .tooltip_ data="all"/}
{/template}


/**
 * authorization link icon
 */
{template .icon_ kind="html" private="true"}
    {let $customClasses kind="html"}
        {call .rootClass/}__icon
    {/let}

    <div class="{call .rootClass/}__icon-wrap">
        {call .renderChild}
            {param params: [
                'type': 'icon-svg',
                'renderParams': [
                    'data': [
                        'type': 'user'
                    ],
                    'config': [
                        'customClasses': [$customClasses]
                    ]
                ]
            ]/}
        {/call}
    </div>
{/template}


/**
 * authorization link Tooltip
 * @param params {{
 *     config: {
 *         hintOffset: string
 *     }
 * }}
 */
{template .tooltip_ kind="html" private="true"}
    {let $tooltipData kind="html"}
        {call .tooltipData_ data="all" /}
    {/let}

    {let $customClasses kind="html"}
        {call .rootClass/}__hint
    {/let}

    {call .renderChild}
        {param params: [
            'type': 'hint',
            'renderParams': [
                'data': $tooltipData,
                'config': [
                    'offset': $params.config.hintOffset ?: 'l',
                    'topOffset': 'l',
                    'contentAlign': 'middle',
                    'customClasses': [$customClasses],
                    'noPadding': true,
                    'theme': 'straight-arrow'
                ]
            ]
        ]/}
    {/call}
{/template}


/**
 * tooltip Data
 */
{template .tooltipData_ kind="html" private="true"}
    <div class="{call .rootClass/}__hint-content
                {sp}{call .rootClass/}__hint-content_logged-out">
        {call .tooltipLogin_ /}
    </div>

    <div class="{call .rootClass/}__hint-content
                {sp}{call .rootClass/}__hint-content_logged">
        {call .tooltipLogout_ data="all" /}
    </div>
{/template}


/**
 * tooltip Login
 */
{template .tooltipLogin_ kind="html" private="true"}
    {let $customClasses kind="html"}
        {call .rootClass/}__link{sp}
        {call .rootClass/}__link_login
    {/let}

    {call sm.bLink.Template.base}
        {param params:[
            'data': [
                'name': 'Войти'
            ],
            'config': [
                'customClasses': $customClasses
            ]
        ]/}
    {/call}
{/template}


/**
 * tooltip Logout
 */
{template .tooltipLogout_ kind="html" private="true"}
    {let $customClasses kind="html"}
        {call .rootClass/}__link{sp}
        {call .rootClass/}__link_logout
    {/let}

    <div class="{call .rootClass/}__name">
        {call .userName_ data="all" /}
    </div>

    {call sm.bLink.Template.base}
        {param params:[
            'data': [
                'name': 'Выйти'
            ],
            'config': [
                'customClasses': $customClasses
            ]
        ]/}
    {/call}
{/template}


/**
 * userName
 * @param? params {{
 *     data: sm.bAuthorizationLink.Params.Data
 * }}
 */
{template .userName_ kind="html" private="true"}
    {if $params.data?.user?.firstName}
        {$params.data.user.firstName}{sp}
    {/if}
    {if $params.data?.user?.lastName}
        {$params.data.user.lastName}
    {/if}
{/template}


/**
 * Css classes
 * @param? params {{
 *     data: sm.bAuthorizationLink.Params.Data
 * }}
 * @override
 */
{template .additionalClasses}
    {if $params?.data?.user?.firstName or $params?.data?.user?.lastName}
        {call .rootClass/}_logged
    {/if}
{/template}


/**
 * Root css class
 * @override
 */
{template .rootClass}
    b-authorization-link
{/template}
