{namespace sm.bSearch.Template}

/**
 * typedef {{
 *     sourceUrl: ?string,
 *     argName: ?string,
 * }} sm.bSearch.Template.Params.Data
 */

/**
 * typedef {{
 *     showSearchIcon: ?boolean,
 *     notShowList: ?boolean,
 *     disableSearchBehavior: ?boolean,
 *     height: ?string,
 *     faderSize: ?string,
 *     entityType: string
 * }} sm.bSearch.Template.Params.Config
 */


/**
 * typedef {{
 *     text: ?string,
 *     placeholder: ?string,
 *     autofocus: ?boolean,
 *     redirect: ?boolean,
 *     pageAlias: ?string,
 *     theme: ?string,
 *     customClasses: ?string,
 *     inputSize: ?string,
 *     searchArgs: ?string,
 *     icon: ({
 *         name: string,
 *         type: string,
 *         position: string
 *     }|undefinded),
 *     suggestList: ({
 *         theme: string,
 *         color: string,
 *         isShifted: string
 *     }}|undefined),
 *     data: ?sm.bSearch.Template.Params.Data,
 *     config: ?sm.bSearch.Template.Params.Config
 * }} sm.bSearch.Template.Params
 */


/**
 * Search template
 * @param? params {sm.bSearch.Template.Params}
 */
{template .base autoescape="strict" kind="html"}
    {let $data: [
        'redirect': $params?.redirect,
        'pageAlias': $params.pageAlias,
        'disableSearchBehavior': $params?.config.disableSearchBehavior
    ] /}

    <div class="b-search{sp}
                b-search_theme_{$params.theme}{sp}
                b-search_height_{$params?.config?.height ?: 'm'}{sp}
                {$params?.customClasses ? $params?.customClasses + ' ' : ''}
                {$params?.theme == 'foldable' ? 'i-animate ' : ''}
                {$params?.config.disableSearchBehavior ?
                    ' b-search_search-behavior_disabled' :
                    ''}"
        data-params="{call goog.json.serialize data="$data" /}"
    >

        {call .fader_ data="all" /}
        {call .body_ data="all" /}
    </div>
{/template}


/**
 * Fader template
 * @param params {sm.bSearch.Template.Params}
 */
{template .fader_}
    {if $params?.theme == 'foldable'}
        {let $classes kind="html"}
            b-search__fader{sp}
            i-animate{sp}

            {if $params?.config?.faderSize}
                b-search__fader_size_{$params.config.faderSize}
            {/if}
        {/let}

        <div class="{$classes}"></div>
    {/if}
{/template}


/**
 * Body template
 * @param? params {sm.bSearch.Template.Params}
 */
{template .body_ autoescape="strict" kind="html"}
    <div class="b-search__body">
        {if $params?.theme == 'foldable' or $params?.config?.showSearchIcon}
            <div class="b-search__bg i-animate"></div>
            {call .searchButton_ /}
        {/if}

        {if $params.icon}
            {let $type: $params.icon.type == 'png' ? 'icon' : 'icon-svg' /}

            <div class="b-search__icon b-search__icon_position_{$params.icon.position}">
                {call sm.iCloblFactory.FactoryStendhal.INSTANCE.soy}
                    {param type: $type /}
                    {param renderParams: [
                        'data': [
                            'type': $params.icon.name
                        ]
                    ]/}
                {/call}
            </div>
        {/if}

        {let $minLength: $params.config.entityType == 'school' ? 2 : 3 /}

        {let $sourceUrl: $params?.data?.sourceUrl ?:
            '/api/' + $params.config.entityType + '/search/suggest'/}

        {let $isUniversity: ($params.config.entityType == 'university') or
            ($params.config.entityType == 'program') ?
                true :
                false
        /}

        {let $suggestListTheme kind="text"}
            {if $params.suggestList and $params.suggestList.theme}
                {$params.suggestList.theme}
            {elseif $isUniversity}
                neptune
            {else}
                stendhal
            {/if}
        {/let}

        {let $suggestListColor kind="text"}
            {if $params.suggestList and $params.suggestList.color}
                {$params.suggestList.color}
            {elseif $isUniversity}
                blue
            {else}
                sienna
            {/if}
        {/let}

        <div class="b-search__suggest-holder i-animate">
            {call gorod.gSuggest.SuggestTemplate.render}
                {param params: [
                    'data': [
                        'text': $params?.text,
                        'minLength': $minLength,
                        'autofocus': $params?.autofocus,
                        'placeholder': $params?.placeholder,
                        'sourceUrl': $sourceUrl,
                        'argName': $params.data?.argName ?: 'searchString',
                        'args': $params.searchArgs
                    ],
                    'config': [
                        'customClasses': 'b-search__suggest',
                        'filtrationEnabled': false,
                        'notShowList': $params?.config?.notShowList
                    ],
                    'list': [
                        'theme': $suggestListTheme,
                        'color': $suggestListColor,
                        'extraClasses': $params.suggestList?.isShifted ?
                            'b-search__list_shifted' : ''
                    ],
                    'input': [
                        'style': [
                            'theme': 'stendhal',
                            'size': $params?.inputSize
                        ]
                    ]
                ]/}
            {/call}
        </div>

        {if $params?.theme == 'foldable'}
            {call .clearButton_ /}
        {/if}
    </div>
{/template}


/**
 * Search suggest item
 * @param? params {{
 *     type: string,
 *     name: string,
 *     areas: ?string,
 *     totalScore: ?number
 * }}
 */
{template .item autoescape="strict" kind="html"}
    <span class="b-search__item b-search__item_type_{$params.type}">
        {call .itemIcon_ data="all" /}
        {call .itemName_ data="all" /}
        {call .itemScore_ data="all" /}

        {if $params.areas}
            <span class="b-search__list-area">{$params.areas}</span>
        {/if}
    </span>
{/template}


/**
 * Search suggest item icon
 * @param? params {{
 *     type: string,
 *     totalScore: ?number
 * }}
 */
{template .itemIcon_ private="true" autoescape="strict" kind="html"}
    {switch $params.type}
        {case 'schools'}
            {call .itemIconEntity_ data="all" /}
        {case 'courses'}
            {call .itemIconEntity_ data="all" /}
        {case 'metro'}
            {call .itemIconMetro_ /}
        {case 'areas'}
            {call .itemIconLocation_ /}
        {case 'districts'}
            {call .itemIconLocation_ /}
    {/switch}
{/template}


/**
 * Search suggest item score
 * @param? params {{
 *     type: string,
 *     totalScore: ?number
 * }}
 */
{template .itemScore_ private="true" autoescape="strict" kind="html"}
    {switch $params.type}
        {case 'universities'}
            {call .itemScoreUniversity_ data="all" /}
        {case 'programs'}
            {call .itemScoreUniversity_ data="all" /}
    {/switch}
{/template}


/**
 * Search suggest entity name
 * @param? params {{
 *     name: string,
 * }}
 */
{template .itemName_ private="true" autoescape="strict" kind="html"}
    <span class="b-search__list-name">{$params.name}</span>
{/template}


/**
 * Search suggest entity icon
 * @param? params {{
 *     totalScore: ?number
 * }}
 */
{template .itemIconEntity_ private="true" autoescape="strict" kind="html"}
    {call sm.bMark.Template.base}
        {param params: [
            'value': $params.totalScore,
            'display': 'inline',
            'config': [
                'size': 's',
                'customClasses': 'b-search__item-icon'
            ]
        ] /}
    {/call}
{/template}


/**
 * Search suggest metro icon
 */
{template .itemIconMetro_ private="true" autoescape="strict" kind="html"}
    {call sm.iCloblFactory.FactoryStendhal.INSTANCE.soy}
        {param type: 'icon-svg' /}
        {param renderParams: [
            'data': [
                'type': 'metro'
            ],
            'config': [
                'customClasses': ['b-search__item-icon']
            ]
        ]/}
    {/call}
{/template}


/**
 * Search suggest area icon
 */
{template .itemIconLocation_ private="true" autoescape="strict" kind="html"}
    {call sm.iCloblFactory.FactoryStendhal.INSTANCE.soy}
        {param type: 'icon' /}
        {param renderParams: [
            'data': [
                'type': 'location'
            ],
            'config': [
                'customClasses': ['b-search__item-icon']
            ]
        ]/}
    {/call}
{/template}


/**
 * Search suggest university score
 * @param? params {{
 *     totalScore: ?number
 * }}
 */
{template .itemScoreUniversity_ private="true" autoescape="strict" kind="html"}
    <div class="b-search__item-score">
        {call sm.iCloblFactory.FactoryStendhal.INSTANCE.soy}
            {param type: 'smStars' /}
            {param renderParams: [
                'data': [
                    'amount': 5,
                    'selectedAmount': $params.totalScore
                ],
                'config': [
                    'size': '5xs',
                    'theme': 'neptune'
                ]
            ]/}
        {/call}
    </div>
{/template}


/**
 * Clear button template
 */
{template .clearButton_ kind="html"}
    <div class="b-search__control b-search__control_clear i-animate">
        {call sm.iCloblFactory.FactoryStendhal.INSTANCE.soy}
            {param type: 'icon-svg' /}
            {param renderParams: [
                'data': [
                    'type': 'cross'
                ]
            ]/}
        {/call}
    </div>
{/template}

/**
 * Open button template
 */
{template .searchButton_ kind="html"}
    <div class="b-search__open-button-holder
                i-animate">
        <div class="b-search__control b-search__control_search i-animate">
            {call sm.iCloblFactory.FactoryStendhal.INSTANCE.soy}
                {param type: 'icon-svg' /}
                {param renderParams: [
                    'data': [
                        'type': 'search'
                    ],
                    'config': [
                        'size': 'xs'
                    ]
                ]/}
            {/call}
        </div>
    </div>
{/template}
