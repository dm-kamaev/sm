{namespace sm.lSearch.bSuggestFilter.Template}

/**
 * @typedef {{
 *     header: string,
 *     search: {
 *         placeholder: ?string,
 *         text: ?string,
 *         sourceUrl: string
 *     },
 *     filter: sm.lSearch.bFilter.Template.Params.Data,
 *     selected: ?sm.lSearch.bFilter.Template.Params.Data
 * }} sm.lSearch.bSuggestFilter.Template.Params.Data
 */


/**
 * @typedef {{
 *     theme: (string|undefined),
 *     stylizationModifier: string
 * }} sm.lSearch.bSuggestFilter.Template.Params.Config
 */


/**
 * Constructor
 * @param params {{
 *     data: sm.lSearch.bSuggestFilter.Template.Params.Data
 *     config: sm.lSearch.bSuggestFilter.Template.Params.Config
 * }}
 * @extends cl.iControl.Template
 * @factory sm.iCloblFactory.FactoryStendhal
 * @constructor
 */
{template .suggestFilter}
    {call .init data="all"/}
{/template}

/**
 * @override
 */
{template .NAME}
    lSearch-suggestFilter
{/template}


/**
 * Body
 * @param params {{
 *     data: sm.lSearch.bSuggestFilter.Template.Params.Data
 *     config: sm.lSearch.bSuggestFilter.Template.Params.Config
 * }}
 * @override
 */
{template .body}
    {call .header_ data="all" /}
    {call .search_ data="all" /}
    {call .placeholder_ /}
    {call .filter_ data="all" /}
    {call .selected_ data="all" /}
    {call .button_ data="all"  /}
{/template}


/**
 * Header
 * @param params {{
 *     data: {
 *         header: string
 *     }
 * }}
 */
{template .header_}
    {if $params.data.header}
        <div class="{call .rootClass/}__section{sp}
                    {call .rootClass/}__section_header">
            {$params.data.header}
        </div>
    {/if}
{/template}


/**
 * Search filter options
 * @param params {{
 *     data: {
 *         search: {
 *             placeholder: ?string,
 *             text: ?string,
 *             sourceUrl: ?string
 *         }
 *     }
 * }}
 */
{template .search_}
    {let $customClasses kind="html"}
        {call .rootClass/}__suggest
    {/let}

    <div class="{call .rootClass/}__section {call .rootClass/}__section_search">
        {call sm.bSearch.Template.base}
            {param params: [
                'placeholder': $params.data?.search?.placeholder,
                'text': $params.data.search?.text,
                'theme': 'transparent',
                'customClasses': $customClasses,
                'inputSize': 'min',
                'data': [
                    'sourceUrl': $params.data?.search?.sourceUrl,
                    'argName': 'name'
                ],
                'config': [
                    'showSearchIcon': true,
                    'notShowList': true,
                    'height': 'xxl'
                ]
            ]/}
        {/call}
    </div>
{/template}


/**
 * Placeholder if empty search results
 */
{template .placeholder_}
    <div class="{call .rootClass/}__section{sp}
        {call .rootClass/}__section_placeholder i-utils__hidden">

        <div class="{call .rootClass/}__placeholder-text">
            По вашему запросу ничего не найдено.
        </div>
    </div>
{/template}


/**
 * Filter (suggest for search)
 * @param params {{
 *     data: {
 *         filter: {
 *             name: string,
 *             header: ({
 *                 title: (string|undefined),
 *                 tooltip: (string|undefined)
 *             }|undefined),
 *             options: Array<{
 *                 label: string,
 *                 value: string,
 *                 isChecked: (boolean|undefined)
 *             }>
 *         }
 *     }
 * }}
 */
{template .filter_}
    <div class="{call .rootClass/}__section {call .rootClass/}__section_filter">
        <div class="{call .rootClass/}__filter-bar
            {sp}{call .rootClass/}__filter-bar_top">
        </div>
        <div class="{call .rootClass/}__filter">
            {call .renderChild}
                {param params: [
                    'type': 'lSearch-filter',
                    'renderParams': [
                        'data': $params.data.filter,
                        'config': [
                            'cannotBeHidden': true,
                            'optionsToShow': length($params.data.filter?.options),
                            'theme': 'minimal',
                            'optionsTheme': $params.config?.theme == 'neptune' ?
                                'neptune' : null,
                            'customIcon': $params.config?.theme == 'neptune' ? [
                                'check': 'checked-blue',
                                'uncheck': 'unchecked-blue'
                            ] : null
                        ]
                    ]
                ]/}
            {/call}
        </div>
        <div class="{call .rootClass/}__filter-bar
            {sp}{call .rootClass/}__filter-bar_bottom">
        </div>
    </div>
{/template}


/**
 * Selected filter options
 * @param params {{
 *     data: {
 *         selected: ?sm.lSearch.bFilter.Template.Params.Data
 *     }
 * }}
 */
{template .selected_}
    <div class="{call .rootClass/}__section {call .rootClass/}__section_selected">
        {call .renderChild}
            {param params: [
                'type': 'lSearch-filterLabels',
                'renderParams': [
                    'data': $params.data?.selected ?: '',
                    'config': [
                        'type': 'labels',
                        'cannotBeHidden': true,
                        'optionsToShow': $params.data?.selected ? 6 : ''
                    ]
                ]
            ]/}
        {/call}
    </div>
{/template}


/**
 * Button
 * @param params {{
 *     config: {
 *         theme: (string|undefined)
 *     }
 * }}
 */
{template .button_}
    {let $neptuneConfig: [
        'theme': 'neptune-reverse',
        'borderRoundSize': 'xl'
    ]/}

    <div class="{call .rootClass/}__section {call .rootClass/}__section_button">
        {call .renderChild}
            {param params: [
                'type': 'button',
                'renderParams': [
                    'data': [
                        'content': [
                            'default': 'Применить'
                        ]
                    ],
                    'config': $params.config?.theme == 'neptune' ?
                        $neptuneConfig : []
                ]
            ]/}
        {/call}
    </div>
{/template}


/**
 * Root css class
 * @override
 */
{template .rootClass}
    b-suggest-filter
{/template}
