{namespace sm.lSearch.bFilter.TemplateDropdown}


/**
 * @typedef {{
 *     name: string,
 *     header: ({
 *         title: (string|undefined),
 *         tooltip: (string|undefined)
 *     }|undefined),
 *     options: Array<{
 *         label: string,
 *         value: string,
 *         isChecked: (boolean|undefined)
 *     }>
 * }} sm.lSearch.bFilter.TemplateDropdown.Params.Data
 */


/**
 * @typedef {{
 *     data: sm.lSearch.bFilter.TemplateDropdown.Params.Data,
 *     config: sm.lSearch.bFilter.Template.Params.Config
 * }} sm.lSearch.bFilter.TemplateDropdown.Params
 */


/**
 * Constructor
 * @param params {sm.lSearch.bFilter.TemplateDropdown.Params}
 * @extends sm.lSearch.bFilter.Template
 * @factory sm.iCloblFactory.FactoryStendhal
 * @constructor
 */
{template .filter}
    {call .init data="all"/}
{/template}

/**
 * @override
 */
{template .NAME}
    lSearch-filterDropdown
{/template}


/**
 * List options template
 * @param params {{
 *     data: {
 *         name: string,
 *         options: Array<{
 *             label: string,
 *             value: string,
 *             isChecked: (boolean|undefined)
 *         }>
 *     },
 *     config: {
 *         optionsToShow: (number|undefined),
 *         type: (string|undefined),
 *         stylizationModifier: string
 *     }
 * }}
 * defaultOpener is label of the last option
 * @public
 */
{template .listOptions}
    <div class="{call .rootClass/}__list-options">
        {let $checkedOpener kind="html"}
            {foreach $option in $params.data.options}
                {if $option?.isChecked}
                    {$option.label}
                {/if}
            {/foreach}
        {/let}

        {let $opener: $checkedOpener == '' ?
            $params.data.options[(length($params.data.options) - 1)].label :
            $checkedOpener
        /}

        {call .renderChild}
            {param params: [
                'factory': $params.config.modifier,
                'type': 'dropdown-select',
                'renderParams': [
                    'data': [
                        'defaultOpenerText': $opener,
                        'content': [
                            'items': $params.data.options
                        ]
                    ],
                    'config': [
                        'theme': 'rectangle'
                    ]
                ]
            ] /}
        {/call}
    </div>
{/template}


/**
 * @override
 */
{template .additionalClasses}
    {call .rootClass/}_dropdown
{/template}
