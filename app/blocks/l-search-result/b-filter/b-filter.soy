{namespace sm.lSearchResult.bFilter.Template}

/**
 * @typedef {object} sm.lSearchResult.bFilter.Template.Params
 * @property {?object} data
 * @property {?{label: ?string, value: ?string}[]} data.filters
 * @property {?{title: ?string, help: ?string}} data.header
 * @property {?string} data.name
 * @property {?object} config
 * @property {?boolean} config.cannotBeHidden
 * @property {?boolean} config.isShowed
 * @property {?number} config.filtersToShow
 */

/**
 * Filter template
 * @param? params {sm.lSearchResult.bFilter.Template.Params}
 */
{template .base autoescape="strict" kind="html"}
    {call .init data="all"/}
{/template}

/**
 * Root class name template
 */
{template .rootClassName autoescape="strict" kind="html"}
    b-filter
{/template}

/**
 * Filter init template
 */
{template .init autoescape="strict" kind="html"}
    <div class="{call .rootClassName/}">
        {call .header data="all"/}
        {call .filters data="all"/}
    </div>
{/template}

/**
 * Header template
 * @param? params {
 *     data: ?{
 *         header: ?{
 *             title: ?string,
 *             tooltip: ?string
 *         }
 *     },
 *     config: ?{
 *         cannotBeHidden: ?bool
 *     }
 * }
 */
{template .header autoescape="strict" kind="html"}
    <div class="b-filter__header">
        <span class="b-filter__title">
            {$params?.data?.header?.title}
        </span>
        {if $params?.data?.header?.tooltip}
            {call .tooltip}
                {param params: [
                    'text': $params?.data?.header?.tooltip
                ]/}
            {/call}
        {/if}
        {if not $params?.config?.cannotBeHidden}
            {call .showFiltersButton data="all" /}
        {/if}
    </div>
{/template}

/**
 * Body template
 * @param? params {
 *     data: ?{
 *         filters: ?list<{
 *             label: ?string,
 *             value: ?string
 *         }>,
 *         name: ?string
 *     },
 *     config: ?{
 *         filtersToShow: ?number
 *     }
 * }
 */
{template .filters autoescape="strict" kind="html"}

    {let $filToShow: $params?.config?.filtersToShow ?
        ($params?.config?.filtersToShow - 1) : 5/}

    <div class="b-filter__filters
        {if not $params?.config?.cannotBeHidden}
            {if not $params?.config?.isShowed}
                {sp}i-utils__hidden
            {/if}
        {/if}
        ">
        {for $i in range($params.data.filters.length)}
            {call .filter}
                {param params: [
                    'filter': $params.data.filters[$i],
                    'hidden': $i > $filToShow ? true : false,
                    'name': $params.data.name,
                    'id': $i
                ]/}
            {/call}
        {/for}

        {if $params.data.filters.length > $filToShow}
            {call .buttonShowMore_}
                {param params: [
                    'numberHiddenItems': $params.data.filters.length - $filToShow - 1
                ]/}
            {/call}
        {/if}
    </div>
{/template}

/**
 * Tempate button
 * @param? params {
 *     numberHiddenItems: ?number
 * }
 */
{template .buttonShowMore_ private="true"}
    {call sm.bLink.Template.base}
        {param params: [
            'data': [
                'name': 'Еще ' + $params.numberHiddenItems + ' предметов'
            ],
            'config': [
                'customClasses': 'b-filter__button b-filter__button_show',
                'size': 'small'
            ]
        ]/}
    {/call}

    {call sm.bLink.Template.base}
        {param params: [
            'data': [
                'name': 'Свернуть список'
            ],
            'config': [
                'customClasses': 'b-filter__button b-filter__button_hide i-utils__hidden',
                'size': 'small'
            ]
        ]/}
    {/call}
{/template}

/**
 * Filter template
 * @param? params {
 *     filter: ?{
 *         label: ?string,
 *         value: ?string,
 *         isChecked: ?boolean
 *     },
 *     hidden: ?bool
 *     name: ?string,
 *     id: number
 * }
 */
{template .filter autoescape="strict" kind="html"}
    <div class="b-filter__section {$params.hidden ? 'i-utils__hidden' : ''}">
        <div class="b-filter__filter">
            <input type="checkbox"
                class="b-filter__input"
                id="{$params.name}-{$params.id}"
                name="{$params.name}"
                value="{$params.filter.value}"
                {$params.filter?.isChecked ? 'checked' : ''}/>
            <label for="{$params.name}-{$params.id}"
                class="b-filter__input-label">
                {$params.filter.label}
            </label>
        </div>
    </div>
{/template}


/**
 * Show filters button
 * @param? params {
 *     config: ?{
 *         isShowed: ? boolean
 *     }
 * }
 */
{template .showFiltersButton}
    <div class="b-filter__show-filters-button">
        <div class="b-filter__show-filters-icon{sp}
            {$params?.config?.isShowed ?
                'g-icon_img_filter-arrow-up' :
                'g-icon_img_filter-arrow-down'
            }">
        </div>
    </div>
{/template}


/**
 * Template tooltip
 * @param? params {
 *     text: ?string
 * }
 */
{template .tooltip}
    <div class="b-filter__tooltip i-hint">
        <div class="b-filter__tooltip-icon">
            {call sm.iFactory.TemplateFactoryStendhal.INSTANCE.render}
                {param params: [
                    'type': 'icon',
                    'renderParams': [
                        'data': [
                            'type': 'school-button'
                        ]
                    ]
                ]/}
            {/call}
        </div>

        {let $tooltipData kind="html"}
            <div class="b-filter__hint-content">
                {$params?.text}
            </div>
        {/let}

        {call sm.iFactory.TemplateFactoryStendhal.INSTANCE.render}
            {param params: [
                'type': 'hint',
                'renderParams': [
                    'data': $tooltipData,
                    'config': [
                        'align': 'arrow',
                        'customClasses': ['b-filter__hint']
                    ]
                ]
            ]/}
        {/call}
    </div>
{/template}
