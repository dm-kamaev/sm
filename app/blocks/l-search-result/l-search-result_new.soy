{namespace sm.lSearchResult.NewTemplate}


/**
 * Schools result list
 * @param? params {{
 *     data: {
 *         schools: [{
 *             id: number,
 *             url: string,
 *             name: {
 *                 light: string,
 *                 bold: string
 *             },
 *             score: [{
 *                 name: string,
 *                 value: number
 *             }],
 *             currentCriterion: {
 *                 name: string,
 *                 value: number
 *             },
 *             description: string,
 *             ratings: string[],
 *             metroStations: string[]
 *         }],
 *         filters: {
 *             filters: [{
 *                 data: {
 *                     filters: [{
 *                         label: string,
 *                         value: string
 *                     }],
 *                      header: {
 *                          title: string,
 *                          help: string
 *                      },
 *                      name: string
 *                  },
 *                  config: {
 *                      cannotBeHidden: bool
 *                  }
 *             }],
 *             url: string
 *         }
 *     },
 *     searchText: string,
 *     countResults: number,
 *     searchSettings: {
 *         url: string,
 *         method: string,
 *         data: {
 *             searcParams: {
 *                 name: string,
 *                 metroId: number,
 *                 areaId: number
 *             },
 *             page: number
 *         }
 *     },
 *     templates: {
 *         search: string,
 *         item: string,
 *         text: string,
 *         value: string
 *     },
 *     config: {
 *         staticVersion: ?string
 *     }
 * }}
 * @extends cl.iLayout.Template
 * @constructor
 * @doc
 */
{template .layout autoescape="strict" kind="html"}
    {call .document data="all" /}
{/template}


/**
 * @override
 */
{template .title autoescape="strict" kind="html"}
    Результаты поиска на Школах Мела
{/template}


/**
 * @override
 */
{template .extraStyles autoescape="strict" kind="html"}
    <link href='https://fonts.googleapis.com/css?family=PT+Serif:400,400italic,700,700italic&subset=latin,cyrillic' rel='stylesheet' type='text/css'>
    <link href='https://fonts.googleapis.com/css?family=Roboto:400,700&subset=latin,cyrillic' rel='stylesheet' type='text/css'>
{/template}


/**
 * @override
 */
{template .scripts autoescape="strict" kind="html"}
    <script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
{/template}


/**
 * @override
 */
{template .extraScripts autoescape="strict" kind="html"}
    <script type="text/javascript" src="/l-search-result.js"></script>
{/template}


/**
 * @param? params {?}
 * @override
 */
{template .content autoescape="strict" kind="html"}
    <div class="l-search-result"
         data-params="{call goog.json.serialize data="$params.searchSettings" /}">
         {call .header_ data="all" /}
         {call .body_ data="all" /}
         {call .footer_ data="all" /}
    </div>
{/template}


/**
 * @param? params {?}
 */
{template .header_ autoescape="strict" kind="html"}
    <div class="l-search-result__header">
        {call sm.bHeader.Template.base}
            {param params: [
                'url': '/',
                'searchText': $params.searchText,
                'searchRedirect': true,
                'templates': [
                    'search': $params.templates.search,
                    'item': $params.templates.item,
                    'text': $params.templates.text,
                    'value': $params.templates.value
                ],
                'notShowLink': 'true'
            ]/}
        {/call}
    </div>
{/template}


/**
 * @param? params {?}
 */
{template .body_ autoescape="strict" kind="html"}
    <div class="l-search-result__body">
        {call .listHeader_ data="all" /}
        {call .leftMenu_ data="all" /}
        <div class="l-search-result__results-section">
            <div class="l-search-result__list-body
                {$params.countResults ? '' : ' i-utils__hidden'}
            ">
                {call sm.lSearchResult.bSchoolList.Template.base}
                    {param params: [
                        'schools': $params.data.schools
                    ]/}
                {/call}
            </div>
        </div>
    </div>
{/template}


/**
 * Footer
 */
{template .footer_ autoescape="strict" kind="html"}
{/template}


/**
 * Header for list of schools
 * @param? params {
 *     countResults: ?number,
 *     searchText: ?string
 * }
 */
{template .listHeader_}
    <div class="l-search-result__list-header">
        <span class="l-search-result__list-header-text">
            {if length($params.searchText)}
            По запросу{sp}
            <span class="l-search-result__list-header-text
                         l-search-result__list-header-text_strong">
                «{$params.searchText}»
            </span>{sp}
            {else}
            По вашему запросу{sp}
            {/if}
            мы{sp}
            <span class="l-search-result__list-header-text
                         l-search-result__list-header-text_change">
                {call .generateHeaderText}
                    {param params: [
                        'countResults': $params.countResults
                    ] /}
                {/call}
            </span>
        </span>
    </div>
{/template}

/**
 * Generates header text for school list
 * @param? params {
 *     countResults: number
 * }
 */
{template .generateHeaderText}
        {if $params.countResults == 0}
            не нашли ничего.
        {else}
            нашли <span class="l-search-result__list-header-text
                               l-search-result__list-header-text_strong
                               l-search-result__list-header-text_amount">
                {$params.countResults}{sp}
                {if $params.countResults > 100}
                    {let $lastTwoNumbers: $params.countResults % 100 /}
                    {call .getEnding_}
                        {param params: [
                            'number': $lastTwoNumbers
                        ]/}
                    {/call}
                {else}
                    {call .getEnding_}
                        {param params: [
                            'number': $params.countResults
                        ]/}
                    {/call}
                {/if}
            </span>
        {/if}
{/template}

/**
 * makes word's 'школа' ending depends of incoming number
 * @param? params {
 *     number: number
 * }
 */
{template .getEnding_}
    {if $params.number >= 11 and $params.number <= 19}
        школ
    {else}
        {let $lastNumber: $params.number % 10 /}
        {if $lastNumber == 1}
            школу
        {elseif $lastNumber >= 2 and $lastNumber <= 4}
            школы
        {else}
            школ
        {/if}
    {/if}
{/template}

/**
 * Left menu template
 */
{template .leftMenu_ autoescape="strict" kind="html" private="true"}
    <div class="l-search-result__left-menu">
        {call .filters_ data="all"/}
    </div>
{/template}

/**
 * Filter template
 * @param? params {
 *     data: {
 *         filters: {
 *             filters: list<{
 *                 data: {
 *                     filters: ?list<{
 *                         label: ?string,
 *                         value: ?string
 *                     }>,
 *                     header: {
 *                         title: ?string,
 *                         help: ?string
 *                     },
 *                     name: ?string
 *                 },
 *                 config:{
 *                     cannotBeHidden: ?bool
 *                 }
 *             }>,
 *             url: ?string
 *         }
 *     }
 * }
 */
{template .filters_ autoescape="strict" kind="html" private="true"}
    <div class="l-search-result__filters">
        {call  sm.lSearchResult.bFilters.Template.base}
            {param params: $params?.data?.filters/}
        {/call}
    </div>
{/template}
