{namespace sm.lSearchResult.Template}


/**
 * Schools result list
 * @param? params {{
 *     data: {
 *         schools: [{
 *             id: number,
 *             url: string,
 *             name: {
 *                 light: string,
 *                 bold: string
 *             },
 *             score: [{
 *                 name: string,
 *                 value: number
 *             }],
 *             currentCriterion: {
 *                 name: string,
 *                 value: number
 *             },
 *             description: string,
 *             ratings: string[],
 *             metroStations: string[],
 *             area: []
 *         }],
 *         filters: {
 *             filters: [{
 *                 data: {
 *                     filters: [{
 *                         label: string,
 *                         value: string
 *                     }],
 *                      header: {
 *                          title: string,
 *                          help: string
 *                      },
 *                      name: string
 *                  },
 *                  config: {
 *                      cannotBeHidden: bool
 *                  }
 *             }],
 *             url: string
 *         }
 *     },
 *     searchText: string,
 *     countResults: number,
 *     searchSettings: {
 *         url: string,
 *         method: string,
 *         data: {
 *             searchParams: {
 *                 name: string,
 *                 metroId: number,
 *                 areaId: number
 *             },
 *             page: number
 *         }
 *     },
 *     config: {
 *         staticVersion: ?string,
 *         analyticsId: ?string
 *     }
 * }}
 */
{template .list autoescape="strict" kind="html"}
    {let $content kind="html"}
        {call .content_ data="all" /}
    {/let}

    {call sm.iLayout.Template.layout}
        {param params: [
            'data': [
                'title': 'Результаты поиска на Школах Мела',
                'content': $content,
                'header': [
                    'notShowLink': true,
                    'url': '/'
                ],
                'landingScript': '/l-search-result.js'
            ],
            'config': [
                'modifier': 'stendhal',
                'page': 'search-result',
                'staticVersion': $params.config?.staticVersion,
                'year':  $params.config?.year,
                'analyticsId': $params.config?.analyticsId
            ]
        ] /}
    {/call}
{/template}


/**
 * @param? params {?}
 * @override
 */
{template .content_ autoescape="strict" kind="html"}
    <div class="l-search-result"
         data-params="{call goog.json.serialize data="$params.searchSettings" /}">
         {call .innerContent_ data="all" /}
    </div>
{/template}


/**
 * @param? params {?}
 */
{template .innerContent_ autoescape="strict" kind="html"}
    <div class="l-search-result__body">
        {call .listHeader_ data="all"}
            {param clone: true /}
        {/call}
        {call .leftMenu_ data="all" /}

        <div class="l-search-result__results-section">
            {call .listHeader_ data="all" /}
            <div class="l-search-result__list-body
                {$params.countResults ? '' : ' i-utils__hidden'}
            ">
                {call sm.lSearchResult.bSchoolList.Template.base}
                    {param params: [
                        'schools': $params.data.schools
                    ]/}
                {/call}
            </div>
        </div>
    </div>
{/template}


/**
 * Header for list of schools
 * @param? params {
 *     countResults: ?number,
 *     searchText: ?string
 * }
 * @param? clone {boolean}
 */
{template .listHeader_}
    <div class="l-search-result__list-header{sp}
                {$clone ? 'l-search-result__list-header_clone' : ''}">
        {call .listHeaderText data="all" /}
    </div>
{/template}


/**
 * Text of header for list of schools
 * @param? params {
 *     countResults: ?number,
 *     searchText: ?string
 * }
 */
{template .listHeaderText}
    <span class="l-search-result__list-header-text">
        {if length($params.searchText)}
            По запросу{sp}
            <span class="l-search-result__list-header-text
                         l-search-result__list-header-text_strong">
                «{$params.searchText}»
            </span>{sp}
        {else}
            По вашему запросу{sp}
        {/if}
        мы{sp}
        <span class="l-search-result__list-header-text
                     l-search-result__list-header-text_change">
            {call .generateHeaderText}
                {param params: [
                    'countResults': $params.countResults
                ] /}
            {/call}
        </span>
    </span>
{/template}


/**
 * Generates header text for school list
 * @param? params {
 *     countResults: number
 * }
 */
{template .generateHeaderText}
        {if $params.countResults == 0}
            не нашли ничего.
        {else}
            нашли <span class="l-search-result__list-header-text
                               l-search-result__list-header-text_strong
                               l-search-result__list-header-text_amount">
                {$params.countResults}{sp}
                {if $params.countResults > 100}
                    {let $lastTwoNumbers: $params.countResults % 100 /}
                    {call .getEnding_}
                        {param params: [
                            'number': $lastTwoNumbers
                        ]/}
                    {/call}
                {else}
                    {call .getEnding_}
                        {param params: [
                            'number': $params.countResults
                        ]/}
                    {/call}
                {/if}
            </span>
        {/if}
{/template}

/**
 * makes word's 'школа' ending depends of incoming number
 * @param? params {
 *     number: number
 * }
 */
{template .getEnding_}
    {if $params.number >= 11 and $params.number <= 19}
        школ
    {else}
        {let $lastNumber: $params.number % 10 /}
        {if $lastNumber == 1}
            школу
        {elseif $lastNumber >= 2 and $lastNumber <= 4}
            школы
        {else}
            школ
        {/if}
    {/if}
{/template}

/**
 * Left menu template
 * @param? params {
 *     searchText: string
 * }
 */
{template .leftMenu_ autoescape="strict" kind="html" private="true"}
    <div class="l-search-result__left-menu">
        <div class="l-search-result__search">
            {call .search_}
                {param params: [
                     'searchText': $params?.searchText,
                     'redirect': false
                ]/}
            {/call}
        </div>
        {call .filters_ data="all"/}
    </div>
{/template}

/**
 * Filter template
 * @param? params {
 *     data: {
 *         filters: {
 *             filters: list<{
 *                 data: {
 *                     filters: ?list<{
 *                         label: ?string,
 *                         value: ?string
 *                     }>,
 *                     header: {
 *                         title: ?string,
 *                         help: ?string
 *                     },
 *                     name: ?string
 *                 },
 *                 config:{
 *                     cannotBeHidden: ?bool
 *                 }
 *             }>,
 *             url: ?string
 *         }
 *     }
 * }
 */
{template .filters_ autoescape="strict" kind="html" private="true"}
    <div class="l-search-result__filters">
        {call  sm.lSearchResult.bFilters.Template.base}
            {param params: $params?.data?.filters/}
        {/call}
    </div>
{/template}

/**
 * Search
 * @param params {{
 *     searchText: ?string,
 *     redirect: ?boolean
 * }}
 */
{template .search_ private="true" autoescape="strict" kind="html"}
    {call sm.bSearch.Template.base}
        {param params: [
            'placeholder': 'Номер школы, метро, район',
            'text': $params?.searchText,
            'theme': 'min',
            'redirect': $params?.searchRedirect,
            'inputSize': 'min'
        ]/}
    {/call}
{/template}

