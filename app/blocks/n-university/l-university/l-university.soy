{namespace sm.lUniversity.Template}


/**
 * typedef {{
 *     openGraph: (sm.gOpenGraph.TemplateStendhal.Params|undefined),
 *     seo: {
 *         metaTitle: string,
 *         metaDescription: (string|undefined),
 *         image: (string|undefined),
 *         relapTag: (string|undefined),
 *         relapImage: (string|undefined),
 *         fbClientId: (string|undefined)
 *     },
 *     user: {
 *         firstName: (string|undefined),
 *         lastName: (string|undefined),
 *         isCommented: boolean
 *     },
 *     authSocialLinks: {
 *         vk: (string|undefined),
 *         fb: (string|undefined)
 *     },
 *     entityData: {
 *         id: number,
 *         name: string,
 *         subunitType: string,
 *         subunitName: string,
 *         description: string,
 *         cutDescription: {
 *             cutText: Array<string>,
 *             fullText: (Array<string>|undefined)
 *         },
 *         descriptionList:
 *              sm.lUniversity.bDescriptionList.Template.Params.Data,
 *         summaryBoard: sm.bSummaryBoard.Template.Params.Data
 *     }
 * }} sm.lUniversity.Template.Data
 */


/**
 * Page university information
 * @param params {{
 *     data: sm.lUniversity.Template.Data,
 *     config: ?sm.iLayout.TemplateStendhal.Params.Config
 * }}
 * @extends sm.iLayout.TemplateStendhal
 * @constructor
 * @doc
 */
{template .university autoescape="strict" kind="html"}
    {call .document data="all" /}
{/template}


/**
 * Add layout script to page
 * @param params {{
 *     config: {
 *         staticVersion: (string|undefined)
 *     }
 * }}
 * @protected
 * @override
 */
{template .layoutScript kind="html"}
    {call cl.iStatic.Template.script}
        {param path: '/static/l-university.js' /}
        {param staticVersion: $params?.config?.staticVersion /}
    {/call}
{/template}


/**
 * Content
 * @param params {{
 *     data: sm.lUniversity.Template.Data,
 *     config: ?sm.iLayout.Template.Params.Config
 * }}
 * @protected
 * @ovveride
 */
{template .mainContent autoescape="strict" kind="html"}
    <div class="{call .rootClass/}__body">
    {if $params}{/if}
        {call .sectionData_ data="all" /}
        // {call .sectionComments_ data="all" /}
        // {call .sectionPrograms_ data="all" /}
    </div>
{/template}


/**
 * Root css class
 * @override
 */
{template .rootClass}
    l-university
{/template}


/**
 * Attributes
 * @param params {{
 *     data: {
 *         user: {
 *             firstName: (string|undefined),
 *             lastName: (string|undefined),
 *             isCommented: boolean
 *         },
 *         authSocialLinks: {
 *             vk: (string|undefined),
 *             fb: (string|undefined)
 *         },
 *         authSocialLinks: {
 *            vk: string,
 *            fb: string
 *         },
 *         entityData: {
 *             id: number,
 *             name: string
 *         }
 *     },
 *     config: {
 *         entityType: string,
 *         modifier: string
 *     }
 * }}
 * @override
 */
{template .attributes kind="attributes"}
    data-params="
        {call cl.iUtils.Utils.stringify}
            {param json: [
                'id': $params.data.entityData?.id,
                'name': $params.data.entityData?.name,
                'isCommented': $params.data.user?.isCommented,
                'isUserAuthorized': $params.data.user ? true : false,
                'authSocialLinks': $params.data?.authSocialLinks,
                'modifier': $params.config?.modifier,
                'type': $params.config.entityType
            ]/}
        {/call}"
{/template}


/**
 * Section data
 * @private
 * @ovveride
 */
{template .sectionData_}
    <div class="{call .rootClass/}__section{sp}
        {call .rootClass/}__section_data{sp}"
    >
        {call .sketchData_ data="all" /}
        {call .mainData_ data="all" /}
    </div>
{/template}


/**
 * Data on the left side - section sketch
 * @param params {{
 *     data: {
 *         entityData: name
 *     }
 * }}
 * @private
 */
{template .sketchData_}
    <div class="{call .rootClass/}__data_sketch">
        {call cl.iFactory.FactoryManager.INSTANCE.renderTemplate}
            {param params: [
                'factory': $params.config.modifier,
                'type': 'smSketch',
                'renderParams': [
                    'data': [
                        'description': $params.data.entityData.name,
                        'image': [
                            'url': 'http://muzuz.ru/uploads/images/p/r/o/progulshiki_hse_nelaskovaja_vshe.jpg',
                            'altText': 'HSE'
                        ],
                        'button': [
                            'data': [
                                'content': 'Оставить отзыв'
                            ],
                            'config': [
                                'theme': 'neptune',
                                'isBorderRound': true
                            ]
                        ]
                    ]
                ]
            ]/}
        {/call}
    </div>
{/template}


/**
 * Data on the middle - section main data
 * @param params {{
 *     data: {
 *         subunitType: string,
 *         subunitName: string,
 *         description: string
 *     }
 * }}
 * @private
 */
{template .mainData_}
    <div class="{call .rootClass/}__data_main-description">
        {call .description_ data="all" /}
        {call .summaryBoard_ data="all" /}
        {call .descriptionList_ data="all" /}
    </div>
{/template}


/**
 * Description
 * @param params {{
 *     data: sm.lUniversity.Template.Data
 * }}
 * @private
 */
{template .description_}
    <div class="{call .rootClass/}__main-description">
        <div class="{call .rootClass/}__type">
            {call cl.iControl.Template.getText}
                {param message: $params.data.entityData.subunitType /}
            {/call}
        </div>
        <div class="{call .rootClass/}__name">
            {call cl.iControl.Template.getText}
                {param message: $params.data.entityData.subunitName /}
            {/call}
        </div>
        <div class="{call .rootClass/}__description">
            {call cl.iControl.Template.getText}
                {param message: $params.data.entityData.description /}
            {/call}
        </div>
        <div class="{call .rootClass/}__description_cut">
            {call cl.iFactory.FactoryManager.INSTANCE.renderTemplate}
                {param params: [
                    'factory': $params.config.modifier,
                    'type': 'smCollapsedText',
                    'renderParams': [
                        'data': [
                            'text': $params.data.entityData.cutDescription,
                            'buttonTextExpand': 'Развернуть описание'
                        ],
                        'config': [
                            'isButtonCollapse': true,
                            'buttonFont': 'inherit',
                            'buttonTheme': 'neptune'
                        ]
                    ]
                ]/}
            {/call}
        </div>
    </div>
{/template}


/**
 * Data on the middle - section main data
 * @param params {{
 *     data: sm.lUniversity.Template.Data
 * }}
 * @private
 */
{template .descriptionList_}
    <div class="{call .rootClass/}__description-list">
        {call cl.iFactory.FactoryManager.INSTANCE.renderTemplate}
            {param params: [
                'factory': $params.config.modifier,
                'type': 'lUniversity-descriptionList',
                'renderParams': [
                    'data': $params.data.entityData.descriptionList
                ]
            ]/}
        {/call}
    </div>
{/template}


/**
 * Summary board
 * @param params {{
 *     data: sm.lUniversity.Template.Data
 * }}
 * @private
 */
{template .summaryBoard_}
    <div class="{call .rootClass/}__summary-board">
        {call cl.iFactory.FactoryManager.INSTANCE.renderTemplate}
            {param params: [
                'factory': $params.config.modifier,
                'type': 'summary-board',
                'renderParams': [
                    'data': $params.data.entityData.summaryBoard
                ]
            ]/}
        {/call}
    </div>
{/template}
