{namespace sm.gModal.TemplateComment}


/**
 * @typedef {{
 *     content: {
 *         header: string,
 *         textAreas: Array<{
 *             title: string,
 *             name: string,
 *             placeholder: (string|undefined),
 *             maxLength: (number|undefined)
 *         }>,
 *         evaluations: {
 *             title: string,
 *             items: Array<{
 *                name: string,
 *                description: string
 *             }>
 *         },
 *         button: {
 *             text: string,
 *             theme: (string|undefined)
 *         }
 *     }
 * }} sm.gModal.TemplateComment.Params.Data
 */


/**
 * @typedef {{
 *     stylizationModifier: string,
 *     size: (string|undefined)
 * }} sm.gModal.TemplateComment.Params.Config
 */


/**
 * Modal template
 * @param params {{
 *     data: sm.gModal.TemplateComment.Params.Data,
 *     config: sm.gModal.TemplateComment.Params.Config
 * }}
 * @extends sm.gModal.TemplateStendhal
 * @constructor
 * @doc
 */
{template .modal}
    {call .init data="all" /}
{/template}


/**
 * Content
 * @param params {{
 *     data: sm.gModal.TemplateComment.Params.Data,
 *     config: sm.gModal.TemplateComment.Params.Config
 * }}
 * @override
 */
{template .content}
    // {call cl.iUtils.Utils.stringify}
            // {param json: $params/}
        // {/call}
    {call .sectionHeader_ data="all" /}
    {call .sectionTextFields_ data="all" /}
    {call .sectionEvaluations_ data="all" /}
    {call .sectionButton_ data="all" /}
{/template}


/**
 * Section header
 * @param params {{
 *     data: {
 *         content: {
 *             header: string
 *         }
 *     }
 * }}
 */
{template .sectionHeader_}
    <div class="{call .rootClass/}__section {call .rootClass/}__section_header">
        {call .header_ data="all" /}
        {call .closer data="all" /}
    </div>
{/template}


/**
 * Section text fields
 * @param params {{
 *     data: {
 *         content: {
 *             textAreas: Array<{
 *                 title: string,
 *                 name: string,
 *                 placeholder: string,
 *                 maxLength: number
 *             }>
 *         }
 *     }
 * }}
 */
{template .sectionTextFields_}
    <div class="{call .rootClass/}__section{sp}
        {call .rootClass/}__section_text-fields">

        {foreach $textArea in $params.data.content.textAreas}
            {call .textArea_}
                {param params: [
                    'data': $textArea
                ]/}
            {/call}
        {/foreach}
    </div>
{/template}


/**
 * Section evaluations
 * @param params {{
 *     data: {
 *         content: {
 *             evaluations: {
 *                 title: string,
 *                 items: Array<{
 *                    name: string,
 *                    description: string
 *                 }>
 *             }
 *         }
 *     }
 * }}
 */
{template .sectionEvaluations_}
    <div class="{call .rootClass/}__section{sp}
        {call .rootClass/}__section_evaluations">

        {call .evaluations_ data="all" /}
    </div>
{/template}


/**
 * Section button
 * @param params {{
 *     data: {
 *         content: {
 *             button: {
 *                 text: (string|undefined),
 *                 theme: (string|undefined)
 *             }
 *         }
 *     }
 * }}
 */
{template .sectionButton_}
    <div class="{call .rootClass/}__section {call .rootClass/}__section_button">
        {let $customClasses kind="html"}
            {call .rootClass/}__button
        {/let}

        {call .renderChild}
            {param params: [
                'type': 'button',
                'renderParams': [
                    'data': [
                        'content': $params.data.content.button.text ?:
                            'Оставить отзыв'
                    ],
                    'config': [
                        'theme': $params.data.content.button.theme
                    ]
                ]
            ]/}
        {/call}
    </div>
{/template}


/**
 * Header
 * @param params {{
 *     data: {
 *         content: {
 *             header: string
 *         }
 *     }
 * }}
 */
{template .header_}
    <div class="{call .rootClass/}__header">
        {call .getText}
            {param message: $params.data.content.header /}
        {/call}
    </div>
{/template}


/**
 * Text area template
 * @param params {{
 *     data: {
 *         title: string,
 *         name: string,
 *         placeholder: string,
 *         maxLength: number
 *     }
 * }}
 */
{template .textArea_}
    <div class="{call .rootClass/}__textarea">
        {call .title_}
            {param params: [
                'data': $params.data,
                'config': [
                    'modifier': 'textarea'
                ]
            ]/}
        {/call}

        {call .renderChild}
            {param params: [
                'type': 'textarea',
                'renderParams': [
                    'data': [
                        'name': $params.data.name,
                        'placeholder': $params.data.placeholder,
                        'maxLength': $params.data.maxLength
                    ]
                ]
            ]/}
        {/call}
    </div>
{/template}

/**
 * Evaluations
 * @param params {{
 *     data: {
 *         content: {
 *             evaluations: {
 *                 title: string,
 *                 items: Array<{
 *                    name: string,
 *                    description: string
 *                 }>
 *             }
 *         }
 *     }
 * }}
 */
{template .evaluations_}
    <div class="{call .rootClass/}__evaluations">
        {call .title_}
            {param params: [
                'data': $params.data.content.evaluations,
                'config': [
                    'modifier': 'evaluations'
                ]
            ]/}
        {/call}

        {call .evaluationItems_ data="all" /}
    </div>
{/template}


/**
 * Evaluation items
 * @param params {{
 *     data: {
 *         content: {
 *             evaluations: {
 *                 title: string,
 *                 items: Array<{
 *                    name: string,
 *                    description: string
 *                 }>
 *             }
 *         }
 *     }
 * }}
 */
{template .evaluationItems_}
    <div class="{call .rootClass/}__evaluation-items">
        {foreach $item in $params.data.content.evaluations.items}
            {call .evaluationItem_}
                {param params: [
                    'data': $item
                ]/}
            {/call}
        {/foreach}
    </div>
{/template}


/**
 * Evaluation
 * @param params {{
 *     data: {
 *         name: string,
 *         description: string
 *     }
 * }}
 */
{template .evaluationItem_}
    <div class="{call .rootClass/}__evaluation">
        <div class="{call .rootClass/}__evaluation-name">
            {call .getText}
                {param message: $params.data.name /}
            {/call}
        </div>

        <div class="{call .rootClass/}__evaluation-stars">
            {call .renderChild}
                {param params: [
                    'type': 'smStars',
                    'renderParams': [
                        'data': [
                            'amount': 5
                        ],
                        'config': [
                            'isActive': true,
                            'theme': 'neptune'
                        ]
                    ]
                ]/}
            {/call}
        </div>

        <div class="{call .rootClass/}__evaluation-description">
            {call .getText}
                {param message: $params.data.description /}
            {/call}
        </div>
    </div>
{/template}


/**
 * Title
 * @param params {{
 *     data: {
 *         data: {
 *             title: string
 *         },
 *         config: {
 *             modifier: (string|undefined)
 *         }
 *     }
 * }}
 */
{template .title_}
    {let $classes kind="html"}
        {call .rootClass/}__title{sp}

        {if $params.config.modifier}
            {call .rootClass/}__title_{$params.config.modifier}
        {/if}
    {/let}

    <div class="{$classes}">
        {call .getText}
            {param message: $params.data.title /}
        {/call}
    </div>
{/template}


/**
 * Css classes
 * @param params {
 *     config: {
 *         size: ?string
 *     }
 * }
 * @override
 */
{template .additionalClasses}
    {call .rootClass/}_comment{sp}
    {call .super_additionalClasses data="all"/}
{/template}
