{namespace sm.gModal.TemplateSideMenu}


/**
 * Modal template
 * @param params {{
 *     data: sm.gModalSideMenu.Params.Data,
 *     config: sm.gModalSideMenu.Params.Config
 * }}
 * @extends sm.gModal.TemplateStendhal
 * @factory sm.iCloblFactory.FactoryStendhal
 * @constructor
 * @doc
 */
{template .modal}
    {call .init data="all" /}
{/template}

/**
 * @override
 */
{template .NAME}
    side-menu
{/template}


/**
 * Content
 * @param params {{
 *     data: sm.gModalSideMenu.Params.Data,
 *     config: sm.gModalSideMenu.Params.Config
 * }}
 * @override
 * @protected
 */
{template .content}
    {call .header_/}
    {call .menu_ data="all"/}
    {call .contacts_ data="all" /}
    {call .authorization_ data="all" /}
    {call .footer_ data="all" /}
{/template}


/**
 * Closer
 * @ovveride
 * @protected
 */
{template .closer}
    <div class="{call .rootClass/}__close-button">
        <div class="{call .rootClass /}__close-icon">
            {call .renderChild}
                {param params: [
                    'type': 'icon-svg',
                    'renderParams': [
                        'data': [
                            'type': 'close-menu'
                        ]
                    ]
                ]/}
            {/call}
        </div>
    </div>
{/template}


/**
 * Header
 * @private
 */
{template .header_}
    <div class="{call .rootClass/}__header">
        {call .closer/}
    </div>
{/template}


/**
 * Menu
 * @param params {{
 *     data: {
 *         content: {
 *              menuItems: Array<{
 *                  url: string,
 *                  content: string
 *              }>
 *          }
 *     }
 * }}
 * @private
 */
{template .menu_}
    <div class="{call .rootClass /}__menu">
        <ul class="{call .rootClass /}__menu-list">
            {foreach $item in $params.data.content.menuItems}
                {call .menuItem_}
                    {param item: $item/}
                {/call}
            {/foreach}
        </ul>
    </div>
{/template}


/**
 * Contacts
 * @param params {{
 *     data: {
 *         content: {
 *             contacts: bSmContacts.Params.Data
 *         }
 *     }
 * }}
 * @private
 */
{template .contacts_}
    <div class="{call .rootClass/}__contacts">
        {call .renderChild}
            {param params: [
                'type': 'smContacts',
                'renderParams': [
                    'data': $params.data.content.contacts
                ]
            ] /}
        {/call}
    </div>
{/template}


/**
 * Authorization
 * @param params {{
 *     data: {
 *         content: {
 *             user?: {
 *                 firstName: string,
 *                 lastName: string,
 *                 photoUrl?: string
 *             }
 *         }
 *     },
 *     config: {
 *         entityType?: string
 *     }
 * }}
 * @private
 */
{template .authorization_}
    <div class="{call .rootClass /}__authorization">
        {call .renderChild}
            {param params: [
                'type': 'authorization-link',
                'renderParams': [
                    'data': [
                        'user': $params.data.content.user
                    ],
                    'config': [
                        'entityType': $params.config.entityType
                    ]
                ]
            ] /}
        {/call}
    </div>
{/template}


/**
 * Footer
 * @param params {{
 *     data: {
 *          content: {
 *              footerItems: {
 *                  data: {
 *                      contactLinks: Array<sm.bSmLink.Template.Params.Data>
 *                  }
 *              }
 *          }
 *     }
 * }}
 * @private
 */
{template .footer_}
    <div class="{call .rootClass /}__footer">
        <ul class="{call .rootClass /}__footer-items">
            {foreach $item in $params.data.content.footerItems.data.contactLinks}
                {call .footerItem_}
                    {param item: $item /}
                {/call}
            {/foreach}

            {call .copyright_ data="all"/}
        </ul>
    </div>
{/template}


/**
 * copyright
 * @param params {{
 *     data: {
 *          content: {
 *              footerItems: {
 *                  data: {
 *                      copyright: string
 *                  }
 *              }
 *          }
 *     }
 * }}
 * @private
 */
{template .copyright_}
    <li class="{call .rootClass /}__footer-item">
        <span class="{call .rootClass /}__copyright">
            {$params.data.content.footerItems.data.copyright}
        </span>
    </li>
{/template}


/**
 * footerLink
 * @param item {sm.bSmLink.Template.Params.Data}
 * @private
 */
{template .footerItem_}
    {let $customClasses kind="text"}
        {call .rootClass /}__footer-link
    {/let}

    <li class="{call .rootClass /}__link {call .rootClass /}__link_footer">
        {call .renderChild}
            {param params: [
                'type': 'smLink',
                'renderParams': [
                    'data': $item,
                    'config': [
                        'size': 'xxl',
                        'theme': 'default',
                        'customClasses': [$customClasses]
                    ]
                ]
            ]/}
        {/call}
    </li>
{/template}


/**
 * link
 * @param item {{
 *    url: string,
 *    name: string
 * }}
 * @private
 */
{template .menuItem_}
    {let $customClasses kind="html"}
        {call .rootClass /}__menu-link
    {/let}

    <li class="{call .rootClass /}__menu-item">
        {call .renderChild}
            {param params: [
                'type': 'smLink',
                'renderParams': [
                    'data': [
                        'url': $item.url,
                        'content': $item.name
                    ],
                    'config': [
                        'size': '8xl',
                        'theme': 'dark',
                        'customClasses': [$customClasses],
                        'target': $item.target or '',
                        'isSelected': $item.isSelected? true: false
                    ]
                ]
            ]/}
        {/call}
    </li>
{/template}


/**
 * Additional Classes
 * @override
 * @protected
 */
{template .additionalClasses}
    g-modal_side-menu{sp}
    {cl.iUtils.Utils.CssClass.HIDDEN}
{/template}
