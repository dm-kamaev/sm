/**
 * @fileoverview Base layout template
 * Create html, head, body tags;
 * Add meta-tags scripts and css styles to page;
 * Add header, subheader and footer to page;
 */
{namespace sm.iLayout.TemplateStendhal}


/**
 * @typedef {{
 *     type: string,
 *     openGraph: (sm.gOpenGraph.TemplateStendhal.Params|undefined),
 *     seo: {
 *         metaTitle: string,
 *         metaDescription: (string|undefined)
 *     },
 *     subHeader: sm.bSmSubHeader.Template.Params.Data
 * }} sm.iLayout.TemplateStendhal.Params.Data
 */


/**
 * @typedef {{
 *     modifier: string,
 *     entityType: string,
 *     page: (string|undefined),
 *     year: (number|undefined),
 *     staticVersion: (string|undefined),
 *     analyticsId: string,
 *     experimentId: string,
 *     yandexMetrikaId: number,
 *     carrotquestId: string,
 *     domain: string,
 *     fbClientId: ?number,
 *     csrf: string
 * }} sm.iLayout.TemplateStendhal.Params.Config
 */


/**
 * Base landing for pages
 * @param params {{
 *     data: sm.iLayout.TemplateStendhal.Params.Data,
 *     config: sm.iLayout.TemplateStendhal.Params.Config
 * }}
 * @extends cl.iLayout.Template
 * @constructor
 * @doc
 */
{template .layout autoescape="strict" kind="html"}
    {call .document data="all" /}
{/template}


/**
 * @param params {{
 *     data: sm.iLayout.TemplateStendhal.Params.Data,
 *     config: sm.iLayout.TemplateStendhal.Params.Config
 * }}
 * @override
 */
{template .head kind="html"}
    {call .contentExperimentScript data="all" /}
    {call .super_head data="all" /}
{/template}


/**
 * Meta tags
 */
{template .meta autoescape="strict" kind="html"}
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">
{/template}


/**
 * @param params {{
 *     data: {
 *         seo: {
 *             metaTitle: string
 *         }
 *     }
 * }}
 * @override
 */
{template .title autoescape="strict" kind="html"}
    {$params.data.seo.metaTitle}
{/template}


/**
 * @param params {{
 *     data: {
 *         seo: {
 *             metaDescription: (string|undefined)
 *         }
 *     }
 * }}
 * @override
 */
{template .description autoescape="strict" kind="html"}
    {if $params.data.seo?.metaDescription}
        <meta name="description" content="{$params.data.seo?.metaDescription}">
    {/if}
{/template}


/**
 * Favicon
 * @override
 */
{template .favicon autoescape="strict" kind="html"}
    <link rel="shortcut icon" href="/static/images/n-common/favicon.ico"
        type="image/x-icon">
{/template}


/**
 * Default styles
 * @param params {{
 *     config: sm.iLayout.TemplateStendhal.Params.Config
 * }}
 * @override
 */
{template .styles autoescape="strict" kind="html"}
    {call cl.iStatic.Template.style}
        {param path: '/static/clobl.build.css' /}
        {param staticVersion: $params?.config?.staticVersion /}
    {/call}
    {call cl.iStatic.Template.style}
        {param path: '/static/styles.css' /}
        {param staticVersion: $params?.config?.staticVersion /}
    {/call}
{/template}


/**
 * @override
 */
{template .extraStyles autoescape="strict" kind="html"}
    <link href='https://fonts.googleapis.com/css?family=PT+Serif:400,400italic,700,700italic&subset=latin,cyrillic'
        rel='stylesheet' type='text/css'>
    <link href='https://fonts.googleapis.com/css?family=Roboto:400,700&subset=latin,cyrillic'
        rel='stylesheet' type='text/css'>
{/template}


/**
 * @param params {sm.gOpenGraph.TemplateStendhal.Params}
 * @override
 */
{template .openGraph}
    {call sm.gOpenGraph.TemplateStendhal.openGraph data="all"/}
{/template}


/**
 * Call experiment script template if needed
 * @param params {{
 *     config: {
 *         experimentId: string
 *     }
 * }}
 */
{template .contentExperimentScript kind="html"}
    {if $params?.config.experimentId}
        {call sm.iContentExperiment.Template.script}
            {param params: [
                'data': [
                    'experimentId': $params.config.experimentId
                ]
            ] /}
        {/call}
    {/if}
{/template}


/**
 * @override
 */
{template .scripts autoescape="strict" kind="html"}
    <script type="text/javascript"
        src="https://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js">
    </script>
{/template}


/**
 * @param params {{
 *     config: {
 *         staticVersion: (string|undefined),
 *         analyticsId: string,
 *         yandexMetrikaId: number,
 *         carrotquestId: string,
 *         csrf: string
 *     }
 * }}
 * @override
 */
{template .extraScripts autoescape="strict" kind="html"}
    {call .layoutScript data="all" /}
    {call .csrf data="all"/}
    {call .analytics data="all"/}
    {call .metrika data="all"/}
    {call .carrotquest data="all" /}
    {call .relap data="all" /}
{/template}


/**
 * Add layout script to page
 * Must be overridden when inheriting
 * @protected
 */
{template .layoutScript kind="html"}
{/template}


/**
 * @param params {{
 *     config: {
 *         csrf: string
 *     }
 * }}
 * @protected
 */
{template .csrf autoescape="strict" kind="html"}
    <script>
        window['ctx'] = [];
        window['ctx']['csrf'] = {$params?.config?.csrf};
    </script>
{/template}


/**
 * Google analytics counter
 * @param params {{
 *     config: {
 *         analyticsId: string
 *     }
 * }}
 * @protected
 */
{template .analytics autoescape="strict" kind="html"}
    <script>
        var analytics = sm.iAnalytics.Analytics.getInstance();
        analytics.init('{$params?.config?.analyticsId}');
    </script>
{/template}


/**
 * Yandex Metrika counter
 * @param params {{
 *     config: {
 *         yandexMetrikaId: number
 *     }
 * }}
 * @protected
 */
{template .metrika autoescape="strict" kind="html"}
    <!-- Yandex.Metrika counter -->
    <script type="text/javascript">
        var metrika = sm.iMetrika.Metrika.getInstance();
        metrika.init('{$params?.config?.yandexMetrikaId}');
    </script>

    <noscript>
        <div>
            <img src="https://mc.yandex.ru/watch/
                {$params?.config?.yandexMetrikaId}"
                style="position:absolute; left:-9999px;" alt="" />
        </div>
    </noscript>
    <!-- /Yandex.Metrika counter -->
{/template}


/**
 * Carrotquest
 * @param params {{
 *     config: {
 *         carrotquestId: string
 *     }
 * }}
 * @protected
 */
{template .carrotquest autoescape="strict" kind="html"}
    <!-- CarrotQuest BEGIN -->
        <script type="text/javascript">
            var carrotquestInstance = sm.iCarrotquest.Carrotquest.getInstance();
            carrotquestInstance.init('{$params?.config?.carrotquestId}');
        </script>
    <!-- CarrotQuest END -->
{/template}


/**
 * Recommender system
 * @protected
 */
{template .relap autoescape="strict" kind="html"}
    <script type="text/javascript" async
        src="https://relap.io/api/v6/head.js?token=s4f-T0rORrtGBgMG">
    </script>
{/template}


/**
 * @param params {{
 *     data: sm.iLayout.TemplateStendhal.Params.Data,
 *     config: sm.iLayout.TemplateStendhal.Params.Config
 * }}
 * @override
 */
{template .content autoescape="strict" kind="html"}
    <div class="{call .rootClass/} {call .entityModifierClass data="all"/}"
                {call .attributes data="all"/}>

        {call .mainSubheader data="all" /}
        {call .mainContent data="all" /}
        {call .mainFooter data="all" /}
    </div>
{/template}


/**
 * Subheader
 * @param params {{
 *     data: {
 *         subheader: sm.bSmSubheader.Template.Params.Data
 *     },
 *     config: {
 *         entityType: string,
 *         modifier: ?string
 *     }
 * }}
 * @protected
 */
{template .mainSubheader autoescape="strict" kind="html"}
    <div class="{call .rootClass/}__subheader">
        {call cl.iFactory.FactoryManager.INSTANCE.renderTemplate}
            {param params: [
                'factory': $params.config.modifier,
                'type': 'smSubheader',
                'renderParams': [
                    'data': $params.data.subHeader,
                    'config': [
                        'bottomLine': true,
                        'entityType': $params.config.entityType
                    ]
                ]
            ]/}
        {/call}
    </div>
{/template}


/**
 * Content
 * @protected
 */
{template .mainContent autoescape="strict" kind="html"}
{/template}


/**
 * Footer
 * @param params {
 *     config: {
 *         year: ?number,
 *         modifier: ?string
 *     }
 * }
 * @protected
 */
{template .mainFooter autoescape="strict" kind="html"}
    <div class="{call .rootClass/}__footer">
        {call cl.iFactory.FactoryManager.INSTANCE.renderTemplate}
            {param params: [
                'factory': $params.config.modifier,
                'type': 'smFooter',
                'renderParams': [
                    'data': [
                        'year': $params?.config?.year,
                        'contactLinks': [
                            [
                                'content': 'Cвязаться с нами',
                                'url': 'http://mel.fm/contacts'
                            ],
                            [
                                'content': 'Пользовательское соглашение',
                                'url': 'http://mel.fm/terms-of-use'
                            ],
                            [
                                'content': 'Стать партнёром',
                                'url': 'mailto:vs@mel.fm'
                            ]

                        ]
                    ]
                ]
            ]/}
        {/call}
    </div>
{/template}


/**
 * Attributes on element
 * Important to write kind="attributes" when overrides
 * @param params {{
 *     data: {
 *         user: {
 *             firstName: (string|undefined),
 *             lastName: (string|undefined)
 *         },
 *         authSocialLinks: {
 *             vk: (string|undefined),
 *             fb: (string|undefined)
 *         }
 *     },
 *     config: {
 *         entityType: string,
 *         modifier: string
 *     }
 * }}
 * @protected
 */
{template .attributes kind="attributes"}
    data-params="
        {call cl.iUtils.Utils.stringify}
            {param json: [
                'isUserAuthorized': $params.data?.user ? true : false,
                'authSocialLinks': $params.data?.authSocialLinks,
                'modifier': $params.config?.modifier,
                'type': $params.config?.entityType,
            ] /}
        {/call}"
{/template}


/**
 * Css class modifier of the entity type
 * @param params {{
 *     config: {
 *         entityType: string
 *     }
 * }}
 * @protected
 */
{template .entityModifierClass}
    {call .rootClass/}_entity_{$params.config.entityType}
{/template}


/**
 * Root css class
 * @override
 * @protected
 */
{template .rootClass}
    i-layout
{/template}
