{namespace sm.gTextarea.TemplateStendhal}


/**
 * @typedef {{
 *     placeholder: ?string,
 *     value: ?string,
 *     name: ?string,
 *     maxLength: ?number
 * }} sm.gTextarea.TemplateStendhal.Params.Data
 */


/**
 * @typedef {{
 *     stylizationModifier: string,
 *     autoHeight: ?bolean,
 *     showCounter: ?bolean,
 *     minHeight: ?string,
 *     theme: (string|undefined)
 * }} sm.gTextarea.TemplateStendhal.Params.Config
 */

/**
 * Constructor
 * @param? params {{
 *     data: sm.gTextarea.TemplateStendhal.Params.Data,
 *     config: sm.gTextarea.TemplateStendhal.Params.Config
 * }}
 * @extends cl.gTextarea.Template
 * @constructor
 * @doc
 */
{template .textarea}
    {call .init data="all"/}
{/template}

/**
 * @override
 * @param params {
 *     data: {
 *         maxLength: ?number
 *     }
 * }
 */
{template .beforeCounter}
    <div class="{call .rootClass/}__counter-custom-text-left">
        {call cl.iUtils.Utils.declensionPrint}
            {param params: [
                'num': $params.data.maxLength,
                'nom': 'Остался',
                'gen': 'Осталось',
                'plu': 'Осталось'
            ]/}
        {/call}
    </div>
    {sp}
{/template}

/**
 * @override
 * @param params {
 *     data: {
 *         maxLength: ?number
 *     }
 * }
 */
{template .afterCounter}
    {sp}
    <div class="{call .rootClass/}__counter-custom-text-symbols">
        {call cl.iUtils.Utils.declensionPrint}
            {param params: [
                'num': $params.data.maxLength,
                'nom': 'символ',
                'gen': 'символа',
                'plu': 'символов'
            ]/}
        {/call}
    </div>
{/template}

/**
 * Css classes
 * @override
 * @param params ?{}
 */
{template .additionalClasses}
    {if $params?.config?.autoHeight}
            {sp}
            g-textarea_auto-height
    {/if}
    {if $params?.config?.minHeight}
        {sp}{call .rootClass/}_min-height_{$params?.config?.minHeight}
    {/if}
{/template}
