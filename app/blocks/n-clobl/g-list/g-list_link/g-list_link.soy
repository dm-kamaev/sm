{namespace sm.gList.TemplateLink}


/**
 * @typedef {{
 *     items: Array<{
 *         label: ?string,
 *         val: (string|number|undefined),
 *         url: (string|undefined),
 *         isSelected: (boolean|undefined),
 *         isDisabled: (boolean|undefined)
 *     }>,
 *     selectedItemId: (number|undefined)
 * }} sm.gList.TemplateLink.Params.Data
 */


/**
 * @typedef {{
 *     mode: ('selection'|'multiselection'|undefined),
 *     maxSelection: (number|undefined)
 * }} sm.gList.TemplateLink.Params.Config
 */


/**
 * Constructor
 * @param params {{
 *     data: sm.gList.TemplateLink.Params.Data,
 *     config: sm.gList.TemplateLink.Params.Config
 * }}
 * @extends sm.gList.TemplateStendhal
 * @constructor
 * @doc
 */
{template .list}
    {call .init data="all"/}
{/template}


/**
 * Value template
 * @param params {{
 *     label: ?string
 * }}
 * @override
 * @protected
 */
{template .value}
    {let $customClasses kind="html"}
        {call .rootClass/}__link
    {/let}

     <div class="{call .rootClass/}__item-link">
        {call .renderChild}
            {param params: [
                'type': 'smLink',
                'renderParams': [
                    'data': [
                        'content': $params.label
                    ],
                    'config': [
                        'size': 'l',
                        'customClasses': [$customClasses],
                        'disableHover': true
                    ]
                ]
            ]/}
        {/call}
    </div>
{/template}


/**
 * Css classes
 * @override
 * @protected
 */
{template .additionalClasses}
    {call .rootClass/}_link
{/template}


/**
 * @param params {{
 *     data: sm.gList.TemplateLink.Params.Data,
 *     config: sm.gList.TemplateLink.Params.Config
 * }}
 * @override
 */
{template .attributes kind="attributes"}
    data-params="{call cl.iUtils.Utils.stringify}
        {param json: quoteKeysIfJs([
            'data': [
                'items': $params.data?.items ?: [],
                'selectedItemId': $params.data?.selectedItemId
            ],
            'config': [
                'mode': $params.config?.mode,
                'maxSelection': $params.config?.maxSelection
            ]
        ]) /}
    {/call}"
{/template}