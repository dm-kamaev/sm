{namespace sm.gList.TemplateStendhal}


/**
 * @typedef {{
 *     items: Array<{
 *         label: ?string,
 *         value: (string|number|undefined),
 *         url: (string|undefined),
 *         isSelected: (boolean|undefined),
 *         isDisabled: (boolean|undefined)
 *     }>,
 *     selectedItemId: (number|undefined)
 * }} sm.gList.TemplateStendhal.Params.Data
 */


/**
 * @typedef {{
 *     theme: (string|undefined),
 *     size: ('m'|undefined),
 *     mode: ('selection'|'multiselection'|undefined),
 *     maxSelection: (number|undefined)
 * }} sm.gList.TemplateStendhal.Params.Config
 */


/**
 * Constructor
 * @param params {{
 *     data: sm.gList.TemplateStendhal.Params.Data,
 *     config: sm.gList.TemplateStendhal.Params.Config
 * }}
 * @extends cl.gList.Template
 * @constructor
 * @factory sm.iCloblFactory.FactoryStendhal
 * @doc
 */
{template .list}
    {call .init data="all"/}
{/template}

/**
 * @override
 */
{template .NAME}
    list
{/template}


/**
 * @param params {{
 *     data: sm.gList.TemplateStendhal.Params.Data,
 *     config: sm.gList.TemplateStendhal.Params.Config
 * }}
 * @override
 */
{template .attributes kind="attributes"}
    data-params="{call cl.iUtils.Utils.stringify}
        {param json: quoteKeysIfJs([
            'data': [
                'items': $params.data?.items ?: [],
                'selectedItemId': $params.data?.selectedItemId
            ],
            'config': [
                'mode': $params.config?.mode,
                'maxSelection': $params.config?.maxSelection
            ]
        ]) /}
    {/call}"
{/template}


/**
 * Css classes
* @param params {{
 *     config: {
 *         size: ('m'|undefined),
 *         mode: ('selection'|'multiselection'|undefined)
 *     }
 * }}
 * @override
 * @protected
 */
{template .additionalClasses}
    {if $params.config.mode}
        {call .rootClass/}_mode_{$params.config.mode}
    {/if}

    {if $params.config.size}
        {call .rootClass/}_size_{$params.config.size}
    {/if}
{/template}
