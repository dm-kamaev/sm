{namespace sm.gButton.TemplateStendhal}

/**
 * typedef {{
 *     content: ?string,
 *     defaultText: ?string
 * }}
 * sm.gButton.TemplateStendhal.Params.Data
 */


/**
 * typedef {{
 *     theme: ('dark'|'thin'|undefined),
 *     isDisabled: (boolean|undefined),
 *     size: ('s'|'m'|undefined),
 *     disableHover: (boolean|undefined)
 * }}
 * sm.gButton.TemplateStendhal.Params.Config
 */


/**
 * @param params {{
 *     data: sm.gButton.TemplateStendhal.Params.Data,
 *     config: sm.gButton.TemplateStendhal.Params.Config
 * }}
 * @constructor
 * @extends cl.gButton.Template
 * @factory sm.iCloblFactory.FactoryStendhal
 */
{template .button}
    {call .init data="all" /}
{/template}

/**
 * @override
 */
{template .NAME}
    button
{/template}


/**
 * Body
 * @param? params {{
 *     data: {
 *         content: ?string
 *     },
 *     config: {
 *     	   isDisabled: ?bool
 *     }
 * }}
 * @override
 * @doc
 */
{template .body}
    {$params.data.content ?: $params.data.defaultText}
{/template}


/**
 * @param params {
 *     config: {
 *         size: ('s'|'m'|undefined),
 *         isDisabled: (boolean|undefined),
 *         disableHover: (boolean|undefined)
 *     }
 * }
 * @override
 */
{template .additionalClasses}
    {if $params?.config?.isDisabled}
        {call .rootClass /}_disabled
    {/if}

    {if $params?.config?.size}
        {sp}{call .rootClass /}_size_{$params.config.size}
    {/if}

    {if not $params?.config?.disableHover}
        {sp}{call .rootClass /}_hoverable
    {/if}
{/template}


/**
 * Attributes template
 * @param params {{
 *     data: {
 *         defaultText: string
 *     }
 * }}
 * @override
 */
{template .attributes kind="attributes"}
    data-params="{call cl.iUtils.Utils.stringify}
        {param json: quoteKeysIfJs([
            'defaultText': $params?.data.defaultText,
        ]) /}
    {/call}"
{/template}

